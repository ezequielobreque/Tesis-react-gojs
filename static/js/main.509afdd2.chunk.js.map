{"version":3,"sources":["../node_modules/codemirror/mode lazy /^/.*/.js$/ groupOptions: {} namespace object","GuidedDraggingTool.ts","components/DiagramWrapper.tsx","parser/MyLex.ts","parser/myFunctions.ts","parser/errors.ts","parser/ParserGenerator.tsx","components/help-info/MainHelp.component.tsx","App.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","GuidedDraggingTool","guidelineHtop","guidelineHbottom","guidelineHcenter","guidelineVleft","guidelineVright","guidelineVcenter","_guidelineSnapDistance","_isGuidelineEnabled","_horizontalGuidelineColor","_verticalGuidelineColor","_centerGuidelineColor","_guidelineWidth","_searchDistance","_isGuidelineSnapEnabled","partProperties","layerName","isInDocumentBounds","shapeProperties","stroke","isGeometryPositioned","$","go","make","geometryString","this","val","isNaN","elements","first","strokeWidth","diagram","remove","clearGuidelines","pt","obj","draggingParts","copiedParts","draggedParts","partItr","iterator","next","part","key","showHorizontalMatches","isGuidelineEnabled","showVerticalMatches","console","error","lastInput","snap","isGuidelineSnapEnabled","shift","node","invalidateConnectedLinks","guideline","objBounds","locationObject","getDocumentBounds","p0","y","p1","height","p2","marginOfError","guidelineSnapDistance","distance","searchDistance","area","copy","inflate","otherObjs","findObjectsIn","p","isSelected","isTopLevel","layer","isTemporary","bestDiff","bestObj","bestSpot","Default","bestOtherSpot","each","other","otherBounds","q0","q1","q2","Math","abs","Center","Top","Bottom","offsetX","x","actualBounds","offsetY","bestBounds","x0","min","x2","max","width","bestPoint","setRectSpot","move","invalidateLinks","position","elt","add","Left","Right","y0","y2","DiagramWrapper","props","diagramRef","React","current","getDiagram","addDiagramListener","onDiagramEvent","removeDiagramListener","text","color","draggingTool","layout","isInitial","setsPortSpots","model","linkKeyProperty","makeUniqueKeyFunction","m","data","k","findNodeDataForKey","makeUniqueLinkKeyFunction","findLinkDataForKey","parseType","s","Horizontal","Vertical","Auto","nodeTemplate","background","parse","makeTwoWay","stringify","fill","portId","strokeJoin","margin","editable","font","groupTemplate","linkTemplate","selectionAdorned","reshapable","routing","Orthogonal","corner","angle","curve","JumpOver","segmentOrientation","None","AvoidsNodes","Normal","toArrow","textAlign","segmentIndex","segmentOffset","NaN","OrientUpright","ref","divClassName","initDiagram","nodeDataArray","linkDataArray","modelData","onModelChange","skipsDiagramUpdate","True","createToken","name","pattern","False","LCurly","RCurly","LSquare","RSquare","LRound","RRound","Comma","Colon","SemiColon","ENTITY","COVERAGE","CHILD","COMPOSITE","WEAK","RELATIONSHIP","CALCULATED","ATTRIBUTES","IDENTIFIER","BY","StringEntity","sqlExpretion","RelationNumber","JERARQUIA","OF","COVERTURA","WhiteSpace","group","Lexer","SKIPPED","allTokens","JsonLexer","parser","TypeOfObject","RULE","MANY_SEP","SEP","DEF","OR","ALT","SUBRULE","entity","composite","relationship","CONSUME","OPTION","child","coverage","weak","propertyEntity","manys","calculated","attributesRelation","relation","CONSUME1","CONSUME2","AT_LEAST_ONE_SEP","propierties","performSelfAnalysis","CstParser","ActionsFunctionsClass","Keys","KeysLink","location","H","W","stateData","undefined","totalLocation","arrayOfComposites","FinalDataNodes","initialData","ArrayOfNodes","Entities","links","GetLocation","TotalLocation","number","GetKey","GetKeyForLink","createNodeGo","type","loc","isGroup","fig","handleChild","handleCoverage","handleWeak","searchEntityNodeInArrayOfNodes","buscar","find","nombre","searchParentNodeInArrayOfNodes","search","parent","entityAction","entities","children","image","Weak","push","atributes","handleProperties","PropertyEntity","Coverage","triangle","createTriangle","substring","linkToChildren","Key","to","from","fromSpot","toSpot","createPropertiesGo","Child","linkingToParent","RelationshipAction","Relation","aux","f","some","elemento","AttributesRelation","handleRelations","compositeAction","datos","variables","Propierties","variable","addNodeData","element","canRelink","selectedData","align","dash","c","keyOfParent","keyIdentifier","entidadPadre","otroIdentificador","identity","log","compositeInfo","getAnCompositeOnArray","handlePropertiesOfComposite","enti","Calculated","handleCardinality","Manys","linking","length","nodoNuevo","nodoViejo","_","splice","JSON","Entity","Relationship","Composite","nodeIsExistinInDataNode","onInputEditorContentChange","inputEditor","inputEditorMarkers","setInputMarket","lex","lexErrors","parseErrors","inputEditorMark","start","end","marker","forEach","currMarker","clear","currLexError","line","ch","column","markText","className","title","message","currParserError","token","startLine","startOffset","endOffset","endLine","startColumn","lastToken","isEmpty","resyncedTokens","endColumn","markInputErrors","ParserGenerator","changeStateCallback","textoState","setTextoState","action","useMemo","useState","inputEditorMarker","setInputEditorMarker","handleSubmit","lexAndParseResult","instance","assert","strictEqual","cst","FindRepeatsWords","codemirror","datafind","mapOfObjects","Map","mapOfRepeatsObjects","repeat","has","set","FindErrors","useEffect","handleChange","useCallback","change","getValue","lexResult","tokenize","input","tokens","errors","parseJson","textoo","result","ActionsFunctions","CreateTree","debo","debounce","value","onChange","options","mode","lineNumbers","theme","tabSize","MainHelp","openInfo","setopenInfo","Back","onClick","icon","faArrowLeft","informationOfHelp","App","mapNodeKeyIdx","mapLinkKeyIdx","IniState","state","setState","animation","setAnimationState","helpTodo","sethelpTodo","refreshNodeIndex","nodeArr","n","idx","refreshLinkIndex","linkArr","l","childData","texto","a","setTimeout","hiddenFileInput","faPen","faPlus","file","target","files","filereader","FileReader","readAsText","onload","resultado","split","onerror","multiple","event","click","faUpload","arr","bloc","Blob","saveAs","faSave","faQuestion","style","CSSTransition","in","timeout","classNames","enter","exit","unmountOnExit","sel","subject","produce","draft","get","nd","ld","insertedNodeKeys","modifiedNodeData","removedNodeKeys","modifiedLinkData","insertedLinkKeys","removedLinkKeys","modifiedModelData","modifiedNodeMap","modifiedLinkMap","narr","filter","includes","larr","ReactDOM","render","document","getElementById"],"mappings":"8IAAA,IAAIA,EAAM,CACT,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,mBAAoB,CACnB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,mBAAoB,CACnB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,GAED,qBAAsB,CACrB,IACA,IAED,WAAY,CACX,IACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,IACA,IAED,eAAgB,CACf,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,IAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,IAED,mBAAoB,CACnB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,EACA,IAED,uBAAwB,CACvB,IACA,IAED,aAAc,CACb,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,IACA,IAED,yCAA0C,CACzC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iCAAkC,CACjC,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,GAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,EACA,IAED,mBAAoB,CACnB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,eAAgB,CACf,IACA,IAED,yBAA0B,CACzB,IACA,GAED,+BAAgC,CAC/B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,YAAa,CACZ,IAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,aAAc,CACb,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,EACA,IAED,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,GAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,WAAY,CACX,IACA,IAED,WAAY,CACX,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,IAED,qBAAsB,CACrB,IACA,IAED,+BAAgC,CAC/B,IACA,KAED,eAAgB,CACf,IACA,KAED,iBAAkB,CACjB,IACA,KAED,qBAAsB,CACrB,IACA,GAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,uBAAwB,CACvB,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,iBAAkB,C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","file":"static/js/main.509afdd2.chunk.js","sourcesContent":["var map = {\n\t\"./apl/apl.js\": [\n\t\t116,\n\t\t30\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t117,\n\t\t31\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t118,\n\t\t32\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t119,\n\t\t33\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t120,\n\t\t34\n\t],\n\t\"./clike/clike.js\": [\n\t\t105,\n\t\t2\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t121,\n\t\t35\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t122,\n\t\t36\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t123,\n\t\t37\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t106,\n\t\t38\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t124,\n\t\t39\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t125,\n\t\t40\n\t],\n\t\"./css/css.js\": [\n\t\t102,\n\t\t1\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t126,\n\t\t41\n\t],\n\t\"./d/d.js\": [\n\t\t127,\n\t\t42\n\t],\n\t\"./dart/dart.js\": [\n\t\t128,\n\t\t2,\n\t\t43\n\t],\n\t\"./diff/diff.js\": [\n\t\t129,\n\t\t44\n\t],\n\t\"./django/django.js\": [\n\t\t130,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t131,\n\t\t21\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t132,\n\t\t45\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t133,\n\t\t46\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t134,\n\t\t47\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t135,\n\t\t48\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t136,\n\t\t49\n\t],\n\t\"./elm/elm.js\": [\n\t\t137,\n\t\t50\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t138,\n\t\t51\n\t],\n\t\"./factor/factor.js\": [\n\t\t139,\n\t\t22\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t140,\n\t\t52\n\t],\n\t\"./forth/forth.js\": [\n\t\t141,\n\t\t53\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t142,\n\t\t54\n\t],\n\t\"./gas/gas.js\": [\n\t\t143,\n\t\t55\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t144,\n\t\t4,\n\t\t20\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t145,\n\t\t56\n\t],\n\t\"./go/go.js\": [\n\t\t146,\n\t\t57\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t147,\n\t\t58\n\t],\n\t\"./haml/haml.js\": [\n\t\t148,\n\t\t0,\n\t\t1,\n\t\t14\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t107,\n\t\t16\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t149,\n\t\t26\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t108,\n\t\t59\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t150,\n\t\t60\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t151,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t101,\n\t\t0,\n\t\t1,\n\t\t27\n\t],\n\t\"./http/http.js\": [\n\t\t152,\n\t\t61\n\t],\n\t\"./idl/idl.js\": [\n\t\t153,\n\t\t62\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t103,\n\t\t0\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t154,\n\t\t63\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t155,\n\t\t0,\n\t\t28\n\t],\n\t\"./julia/julia.js\": [\n\t\t156,\n\t\t64\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t157,\n\t\t65\n\t],\n\t\"./lua/lua.js\": [\n\t\t158,\n\t\t66\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t113,\n\t\t4\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t159,\n\t\t67\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t160,\n\t\t68\n\t],\n\t\"./meta.js\": [\n\t\t40\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t161,\n\t\t69\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t162,\n\t\t70\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t163,\n\t\t71\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t164,\n\t\t72\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t165,\n\t\t73\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t166,\n\t\t74\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t167,\n\t\t23\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t168,\n\t\t75\n\t],\n\t\"./octave/octave.js\": [\n\t\t169,\n\t\t76\n\t],\n\t\"./oz/oz.js\": [\n\t\t170,\n\t\t77\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t171,\n\t\t78\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t172,\n\t\t0,\n\t\t79\n\t],\n\t\"./perl/perl.js\": [\n\t\t173,\n\t\t80\n\t],\n\t\"./php/php.js\": [\n\t\t174,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t17\n\t],\n\t\"./pig/pig.js\": [\n\t\t175,\n\t\t81\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t176,\n\t\t82\n\t],\n\t\"./properties/properties.js\": [\n\t\t177,\n\t\t83\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t178,\n\t\t84\n\t],\n\t\"./pug/pug.js\": [\n\t\t114,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t179,\n\t\t85\n\t],\n\t\"./python/python.js\": [\n\t\t109,\n\t\t86\n\t],\n\t\"./q/q.js\": [\n\t\t180,\n\t\t87\n\t],\n\t\"./r/r.js\": [\n\t\t181,\n\t\t88\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t182,\n\t\t89\n\t],\n\t\"./rst/rst.js\": [\n\t\t183,\n\t\t13\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t104,\n\t\t90\n\t],\n\t\"./rust/rust.js\": [\n\t\t184,\n\t\t24\n\t],\n\t\"./sas/sas.js\": [\n\t\t185,\n\t\t91\n\t],\n\t\"./sass/sass.js\": [\n\t\t111,\n\t\t1,\n\t\t92\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t186,\n\t\t93\n\t],\n\t\"./shell/shell.js\": [\n\t\t187,\n\t\t94\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t188,\n\t\t95\n\t],\n\t\"./slim/slim.js\": [\n\t\t189,\n\t\t0,\n\t\t1,\n\t\t15\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t190,\n\t\t96\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t191,\n\t\t97\n\t],\n\t\"./solr/solr.js\": [\n\t\t192,\n\t\t98\n\t],\n\t\"./soy/soy.js\": [\n\t\t193,\n\t\t0,\n\t\t1,\n\t\t18\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t194,\n\t\t99\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t195,\n\t\t100\n\t],\n\t\"./sql/sql.js\": [\n\t\t196,\n\t\t101\n\t],\n\t\"./stex/stex.js\": [\n\t\t110,\n\t\t102\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t115,\n\t\t5\n\t],\n\t\"./swift/swift.js\": [\n\t\t197,\n\t\t103\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t198,\n\t\t104\n\t],\n\t\"./textile/textile.js\": [\n\t\t199,\n\t\t105\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t200,\n\t\t106\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t201,\n\t\t107\n\t],\n\t\"./toml/toml.js\": [\n\t\t202,\n\t\t108\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t203,\n\t\t0,\n\t\t1,\n\t\t12\n\t],\n\t\"./troff/troff.js\": [\n\t\t204,\n\t\t109\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t206,\n\t\t110\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t205,\n\t\t111\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t207,\n\t\t112\n\t],\n\t\"./twig/twig.js\": [\n\t\t208,\n\t\t19\n\t],\n\t\"./vb/vb.js\": [\n\t\t209,\n\t\t113\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t210,\n\t\t114\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t211,\n\t\t115\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t212,\n\t\t116\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t213,\n\t\t117\n\t],\n\t\"./vue/vue.js\": [\n\t\t214,\n\t\t0,\n\t\t1,\n\t\t5,\n\t\t3,\n\t\t9\n\t],\n\t\"./wast/wast.js\": [\n\t\t215,\n\t\t25\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t216,\n\t\t118\n\t],\n\t\"./xml/xml.js\": [\n\t\t100,\n\t\t119\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t217,\n\t\t120\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t218,\n\t\t121\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t219,\n\t\t29\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t112,\n\t\t122\n\t],\n\t\"./z80/z80.js\": [\n\t\t220,\n\t\t123\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 88;\nmodule.exports = webpackAsyncContext;","/*\n *  Copyright (C) 1998-2021 by Northwoods Software Corporation. All Rights Reserved.\n */\n\n/*\n * This is an extension and not part of the main GoJS library.\n * Note that the API for this class may change with any version, even point releases.\n * If you intend to use an extension in production, you should copy the code to your own source directory.\n * Extensions can be found in the GoJS kit under the extensions or extensionsTS folders.\n * See the Extensions intro page (https://gojs.net/latest/intro/extensions.html) for more information.\n */\nimport * as go from \"gojs\";\n\n/**\n * The GuidedDraggingTool class makes guidelines visible as the parts are dragged around a diagram\n * when the selected part is nearly aligned with another part.\n *\n * If you want to experiment with this extension, try the <a href=\"../../extensionsTS/GuidedDragging.html\">Guided Dragging</a> sample.\n * @category Tool Extension\n */\nexport class GuidedDraggingTool extends go.DraggingTool {\n\t// horizontal guidelines\n\tprivate guidelineHtop: go.Part;\n\tprivate guidelineHbottom: go.Part;\n\tprivate guidelineHcenter: go.Part;\n\t// vertical guidelines\n\tprivate guidelineVleft: go.Part;\n\tprivate guidelineVright: go.Part;\n\tprivate guidelineVcenter: go.Part;\n\n\t// properties that the programmer can modify\n\tprivate _guidelineSnapDistance: number = 6;\n\tprivate _isGuidelineEnabled: boolean = true;\n\tprivate _horizontalGuidelineColor: string = \"gray\";\n\tprivate _verticalGuidelineColor: string = \"gray\";\n\tprivate _centerGuidelineColor: string = \"gray\";\n\tprivate _guidelineWidth: number = 1;\n\tprivate _searchDistance: number = 1000;\n\tprivate _isGuidelineSnapEnabled: boolean = true;\n\n\t/**\n\t * Constructs a GuidedDraggingTool and sets up the temporary guideline parts.\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst partProperties = { layerName: \"Tool\", isInDocumentBounds: false };\n\t\tconst shapeProperties = { stroke: \"gray\", isGeometryPositioned: true };\n\n\t\tconst $ = go.GraphObject.make;\n\t\t// temporary parts for horizonal guidelines\n\t\tthis.guidelineHtop = $(go.Part, partProperties, $(go.Shape, shapeProperties, { geometryString: \"M0 0 100 0\" }));\n\t\tthis.guidelineHbottom = $(go.Part, partProperties, $(go.Shape, shapeProperties, { geometryString: \"M0 0 100 0\" }));\n\t\tthis.guidelineHcenter = $(go.Part, partProperties, $(go.Shape, shapeProperties, { geometryString: \"M0 0 100 0\" }));\n\t\t// temporary parts for vertical guidelines\n\t\tthis.guidelineVleft = $(go.Part, partProperties, $(go.Shape, shapeProperties, { geometryString: \"M0 0 0 100\" }));\n\t\tthis.guidelineVright = $(go.Part, partProperties, $(go.Shape, shapeProperties, { geometryString: \"M0 0 0 100\" }));\n\t\tthis.guidelineVcenter = $(go.Part, partProperties, $(go.Shape, shapeProperties, { geometryString: \"M0 0 0 100\" }));\n\t}\n\n\t/**\n\t * Gets or sets the margin of error for which guidelines show up.\n\t *\n\t * The default value is 6.\n\t * Guidelines will show up when the aligned nods are ± 6px away from perfect alignment.\n\t */\n\tget guidelineSnapDistance(): number {\n\t\treturn this._guidelineSnapDistance;\n\t}\n\tset guidelineSnapDistance(val: number) {\n\t\tif (typeof val !== \"number\" || isNaN(val) || val < 0) throw new Error(\"new value for GuideddraggingTool.guidelineSnapDistance must be a non-negative number\");\n\t\tif (this._guidelineSnapDistance !== val) {\n\t\t\tthis._guidelineSnapDistance = val;\n\t\t}\n\t}\n\n\t/**\n\t * Gets or sets whether the guidelines are enabled or disable.\n\t *\n\t * The default value is true.\n\t */\n\tget isGuidelineEnabled(): boolean {\n\t\treturn this._isGuidelineEnabled;\n\t}\n\tset isGuidelineEnabled(val: boolean) {\n\t\tif (typeof val !== \"boolean\") throw new Error(\"new value for GuidedDraggingTool.isGuidelineEnabled must be a boolean value.\");\n\t\tif (this._isGuidelineEnabled !== val) {\n\t\t\tthis._isGuidelineEnabled = val;\n\t\t}\n\t}\n\n\t/**\n\t * Gets or sets the color of horizontal guidelines.\n\t *\n\t * The default value is \"gray\".\n\t */\n\tget horizontalGuidelineColor(): string {\n\t\treturn this._horizontalGuidelineColor;\n\t}\n\tset horizontalGuidelineColor(val: string) {\n\t\tif (this._horizontalGuidelineColor !== val) {\n\t\t\tthis._horizontalGuidelineColor = val;\n\t\t\t(this.guidelineHbottom.elements.first() as go.Shape).stroke = this._horizontalGuidelineColor;\n\t\t\t(this.guidelineHtop.elements.first() as go.Shape).stroke = this._horizontalGuidelineColor;\n\t\t}\n\t}\n\n\t/**\n\t * Gets or sets the color of vertical guidelines.\n\t *\n\t * The default value is \"gray\".\n\t */\n\tget verticalGuidelineColor(): string {\n\t\treturn this._verticalGuidelineColor;\n\t}\n\tset verticalGuidelineColor(val: string) {\n\t\tif (this._verticalGuidelineColor !== val) {\n\t\t\tthis._verticalGuidelineColor = val;\n\t\t\t(this.guidelineVleft.elements.first() as go.Shape).stroke = this._verticalGuidelineColor;\n\t\t\t(this.guidelineVright.elements.first() as go.Shape).stroke = this._verticalGuidelineColor;\n\t\t}\n\t}\n\n\t/**\n\t * Gets or sets the color of center guidelines.\n\t *\n\t * The default value is \"gray\".\n\t */\n\tget centerGuidelineColor(): string {\n\t\treturn this._centerGuidelineColor;\n\t}\n\tset centerGuidelineColor(val: string) {\n\t\tif (this._centerGuidelineColor !== val) {\n\t\t\tthis._centerGuidelineColor = val;\n\t\t\t(this.guidelineVcenter.elements.first() as go.Shape).stroke = this._centerGuidelineColor;\n\t\t\t(this.guidelineHcenter.elements.first() as go.Shape).stroke = this._centerGuidelineColor;\n\t\t}\n\t}\n\n\t/**\n\t * Gets or sets the width guidelines.\n\t *\n\t * The default value is 1.\n\t */\n\tget guidelineWidth(): number {\n\t\treturn this._guidelineWidth;\n\t}\n\tset guidelineWidth(val: number) {\n\t\tif (typeof val !== \"number\" || isNaN(val) || val < 0) throw new Error(\"New value for GuidedDraggingTool.guidelineWidth must be a non-negative number.\");\n\t\tif (this._guidelineWidth !== val) {\n\t\t\tthis._guidelineWidth = val;\n\t\t\t(this.guidelineVcenter.elements.first() as go.Shape).strokeWidth = val;\n\t\t\t(this.guidelineHcenter.elements.first() as go.Shape).strokeWidth = val;\n\t\t\t(this.guidelineVleft.elements.first() as go.Shape).strokeWidth = val;\n\t\t\t(this.guidelineVright.elements.first() as go.Shape).strokeWidth = val;\n\t\t\t(this.guidelineHbottom.elements.first() as go.Shape).strokeWidth = val;\n\t\t\t(this.guidelineHtop.elements.first() as go.Shape).strokeWidth = val;\n\t\t}\n\t}\n\n\t/**\n\t * Gets or sets the distance around the selected part to search for aligned parts.\n\t *\n\t * The default value is 1000.\n\t * Set this to Infinity if you want to search the entire diagram no matter how far away.\n\t */\n\tget searchDistance(): number {\n\t\treturn this._searchDistance;\n\t}\n\tset searchDistance(val: number) {\n\t\tif (typeof val !== \"number\" || isNaN(val) || val <= 0) throw new Error(\"new value for GuidedDraggingTool.searchDistance must be a positive number.\");\n\t\tif (this._searchDistance !== val) {\n\t\t\tthis._searchDistance = val;\n\t\t}\n\t}\n\n\t/**\n\t * Gets or sets whether snapping to guidelines is enabled.\n\t *\n\t * The default value is true.\n\t */\n\tget isGuidelineSnapEnabled(): boolean {\n\t\treturn this._isGuidelineSnapEnabled;\n\t}\n\tset isGuidelineSnapEnabled(val: boolean) {\n\t\tif (typeof val !== \"boolean\") throw new Error(\"new value for GuidedDraggingTool.isGuidelineSnapEnabled must be a boolean.\");\n\t\tif (this._isGuidelineSnapEnabled !== val) {\n\t\t\tthis._isGuidelineSnapEnabled = val;\n\t\t}\n\t}\n\n\t/**\n\t * Removes all of the guidelines from the grid.\n\t */\n\tpublic clearGuidelines(): void {\n\t\tthis.diagram.remove(this.guidelineHbottom);\n\t\tthis.diagram.remove(this.guidelineHcenter);\n\t\tthis.diagram.remove(this.guidelineHtop);\n\t\tthis.diagram.remove(this.guidelineVleft);\n\t\tthis.diagram.remove(this.guidelineVright);\n\t\tthis.diagram.remove(this.guidelineVcenter);\n\t}\n\n\t/**\n\t * Calls the base method and removes the guidelines from the graph.\n\t */\n\tpublic doDeactivate(): void {\n\t\tsuper.doDeactivate();\n\t\t// clear any guidelines when dragging is done\n\t\tthis.clearGuidelines();\n\t}\n\n\t/**\n\t * Shows vertical and horizontal guidelines for the dragged part.\n\t */\n\tpublic doDragOver(pt: go.Point, obj: go.GraphObject): void {\n\t\t// clear all existing guidelines in case either show... method decides to show a guideline\n\t\tthis.clearGuidelines();\n\n\t\t// gets the selected part\n\t\tconst draggingParts = this.copiedParts || this.draggedParts;\n\t\tif (draggingParts === null) return;\n\t\tconst partItr = draggingParts.iterator;\n\t\tif (partItr.next()) {\n\t\t\tconst part = partItr.key;\n\t\t\ttry {\n\t\t\t\tthis.showHorizontalMatches(part, this.isGuidelineEnabled, false);\n\t\t\t\tthis.showVerticalMatches(part, this.isGuidelineEnabled, false);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * On a mouse-up, snaps the selected part to the nearest guideline.\n\t * If not snapping, the part remains at its position.\n\t */\n\tpublic doDropOnto(pt: go.Point, obj: go.GraphObject): void {\n\t\tthis.clearGuidelines();\n\n\t\t// gets the selected (perhaps copied) Part\n\t\tconst draggingParts = this.copiedParts || this.draggedParts;\n\t\tif (draggingParts === null) return;\n\t\tconst partItr = draggingParts.iterator;\n\t\tif (partItr.next()) {\n\t\t\tconst part = partItr.key;\n\n\t\t\t// snaps only when the mouse is released without shift modifier\n\t\t\tconst e = this.diagram.lastInput;\n\t\t\tconst snap = this.isGuidelineSnapEnabled && !e.shift;\n\t\t\ttry {\n\t\t\t\tthis.showHorizontalMatches(part, false, snap); // false means don't show guidelines\n\t\t\t\tthis.showVerticalMatches(part, false, snap);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * When nodes are shifted due to being guided upon a drop, make sure all connected link routes are invalidated,\n\t * since the node is likely to have moved a different amount than all its connected links in the regular\n\t * operation of the DraggingTool.\n\t */\n\tpublic invalidateLinks(node: go.Part): void {\n\t\tif (node instanceof go.Node) node.invalidateConnectedLinks();\n\t}\n\n\t/**\n\t * This finds parts that are aligned near the selected part along horizontal lines. It compares the selected\n\t * part to all parts within a rectangle approximately twice the {@link #searchDistance} wide.\n\t * The guidelines appear when a part is aligned within a margin-of-error equal to {@link #guidelineSnapDistance}.\n\t * @param {Node} part\n\t * @param {boolean} guideline if true, show guideline\n\t * @param {boolean} snap if true, snap the part to where the guideline would be\n\t */\n\tpublic showHorizontalMatches(part: go.Part, guideline: boolean, snap: boolean): void {\n\t\tconst objBounds = part.locationObject.getDocumentBounds();\n\t\tconst p0 = objBounds.y;\n\t\tconst p1 = objBounds.y + objBounds.height / 2;\n\t\tconst p2 = objBounds.y + objBounds.height;\n\n\t\tconst marginOfError = this.guidelineSnapDistance;\n\t\tconst distance = this.searchDistance;\n\t\t// compares with parts within narrow vertical area\n\t\tconst area = objBounds.copy();\n\t\tarea.inflate(distance, marginOfError + 1);\n\t\tconst otherObjs = this.diagram.findObjectsIn(\n\t\t\tarea,\n\t\t\t(obj) => obj.part as go.Part,\n\t\t\t(p) => p instanceof go.Part && !p.isSelected && !(p instanceof go.Link) && p.isTopLevel && p.layer !== null && !p.layer.isTemporary,\n\t\t\ttrue\n\t\t) as go.Set<go.Part>;\n\n\t\tlet bestDiff: number = marginOfError;\n\t\tlet bestObj: any = null; // TS 2.6 won't let this be go.Part | null\n\t\tlet bestSpot: go.Spot = go.Spot.Default;\n\t\tlet bestOtherSpot: go.Spot = go.Spot.Default;\n\t\t// horizontal line -- comparing y-values\n\t\totherObjs.each((other) => {\n\t\t\tif (other === part) return; // ignore itself\n\n\t\t\tconst otherBounds = other.locationObject.getDocumentBounds();\n\t\t\tconst q0 = otherBounds.y;\n\t\t\tconst q1 = otherBounds.y + otherBounds.height / 2;\n\t\t\tconst q2 = otherBounds.y + otherBounds.height;\n\n\t\t\t// compare center with center of OTHER part\n\t\t\tif (Math.abs(p1 - q1) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p1 - q1);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Center;\n\t\t\t\tbestOtherSpot = go.Spot.Center;\n\t\t\t}\n\t\t\t// compare top side with top and bottom sides of OTHER part\n\t\t\tif (Math.abs(p0 - q0) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p0 - q0);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Top;\n\t\t\t\tbestOtherSpot = go.Spot.Top;\n\t\t\t} else if (Math.abs(p0 - q2) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p0 - q2);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Top;\n\t\t\t\tbestOtherSpot = go.Spot.Bottom;\n\t\t\t}\n\t\t\t// compare bottom side with top and bottom sides of OTHER part\n\t\t\tif (Math.abs(p2 - q0) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p2 - q0);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Bottom;\n\t\t\t\tbestOtherSpot = go.Spot.Top;\n\t\t\t} else if (Math.abs(p2 - q2) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p2 - q2);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Bottom;\n\t\t\t\tbestOtherSpot = go.Spot.Bottom;\n\t\t\t}\n\t\t});\n\n\t\tif (bestObj !== null) {\n\t\t\tconst offsetX = objBounds.x - part.actualBounds.x;\n\t\t\tconst offsetY = objBounds.y - part.actualBounds.y;\n\t\t\tconst bestBounds = bestObj.locationObject.getDocumentBounds();\n\t\t\t// line extends from x0 to x2\n\t\t\tconst x0 = Math.min(objBounds.x, bestBounds.x) - 10;\n\t\t\tconst x2 = Math.max(objBounds.x + objBounds.width, bestBounds.x + bestBounds.width) + 10;\n\t\t\t// find bestObj's desired Y\n\t\t\tconst bestPoint = new go.Point().setRectSpot(bestBounds, bestOtherSpot);\n\t\t\tif (bestSpot === go.Spot.Center) {\n\t\t\t\tif (snap) {\n\t\t\t\t\t// call Part.move in order to automatically move member Parts of Groups\n\t\t\t\t\tpart.move(new go.Point(objBounds.x - offsetX, bestPoint.y - objBounds.height / 2 - offsetY));\n\t\t\t\t\tthis.invalidateLinks(part);\n\t\t\t\t}\n\t\t\t\tif (guideline) {\n\t\t\t\t\tthis.guidelineHcenter.position = new go.Point(x0, bestPoint.y);\n\t\t\t\t\tthis.guidelineHcenter.elt(0).width = x2 - x0;\n\t\t\t\t\tthis.diagram.add(this.guidelineHcenter);\n\t\t\t\t}\n\t\t\t} else if (bestSpot === go.Spot.Top) {\n\t\t\t\tif (snap) {\n\t\t\t\t\tpart.move(new go.Point(objBounds.x - offsetX, bestPoint.y - offsetY));\n\t\t\t\t\tthis.invalidateLinks(part);\n\t\t\t\t}\n\t\t\t\tif (guideline) {\n\t\t\t\t\tthis.guidelineHtop.position = new go.Point(x0, bestPoint.y);\n\t\t\t\t\tthis.guidelineHtop.elt(0).width = x2 - x0;\n\t\t\t\t\tthis.diagram.add(this.guidelineHtop);\n\t\t\t\t}\n\t\t\t} else if (bestSpot === go.Spot.Bottom) {\n\t\t\t\tif (snap) {\n\t\t\t\t\tpart.move(new go.Point(objBounds.x - offsetX, bestPoint.y - objBounds.height - offsetY));\n\t\t\t\t\tthis.invalidateLinks(part);\n\t\t\t\t}\n\t\t\t\tif (guideline) {\n\t\t\t\t\tthis.guidelineHbottom.position = new go.Point(x0, bestPoint.y);\n\t\t\t\t\tthis.guidelineHbottom.elt(0).width = x2 - x0;\n\t\t\t\t\tthis.diagram.add(this.guidelineHbottom);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * This finds parts that are aligned near the selected part along vertical lines. It compares the selected\n\t * part to all parts within a rectangle approximately twice the {@link #searchDistance} tall.\n\t * The guidelines appear when a part is aligned within a margin-of-error equal to {@link #guidelineSnapDistance}.\n\t * @param {Part} part\n\t * @param {boolean} guideline if true, show guideline\n\t * @param {boolean} snap if true, don't show guidelines but just snap the part to where the guideline would be\n\t */\n\tpublic showVerticalMatches(part: go.Part, guideline: boolean, snap: boolean): void {\n\t\tconst objBounds = part.locationObject.getDocumentBounds();\n\t\tconst p0 = objBounds.x;\n\t\tconst p1 = objBounds.x + objBounds.width / 2;\n\t\tconst p2 = objBounds.x + objBounds.width;\n\n\t\tconst marginOfError = this.guidelineSnapDistance;\n\t\tconst distance = this.searchDistance;\n\t\t// compares with parts within narrow vertical area\n\t\tconst area = objBounds.copy();\n\t\tarea.inflate(marginOfError + 1, distance);\n\t\tconst otherObjs = this.diagram.findObjectsIn(\n\t\t\tarea,\n\t\t\t(obj) => obj.part as go.Part,\n\t\t\t(p) => p instanceof go.Part && !p.isSelected && !(p instanceof go.Link) && p.isTopLevel && p.layer !== null && !p.layer.isTemporary,\n\t\t\ttrue\n\t\t) as go.Set<go.Part>;\n\n\t\tlet bestDiff: number = marginOfError;\n\t\tlet bestObj: any = null; // TS 2.6 won't let this be go.Part | null\n\t\tlet bestSpot: go.Spot = go.Spot.Default;\n\t\tlet bestOtherSpot: go.Spot = go.Spot.Default;\n\t\t// vertical line -- comparing x-values\n\t\totherObjs.each((other) => {\n\t\t\tif (other === part) return; // ignore itself\n\n\t\t\tconst otherBounds = other.locationObject.getDocumentBounds();\n\t\t\tconst q0 = otherBounds.x;\n\t\t\tconst q1 = otherBounds.x + otherBounds.width / 2;\n\t\t\tconst q2 = otherBounds.x + otherBounds.width;\n\n\t\t\t// compare center with center of OTHER part\n\t\t\tif (Math.abs(p1 - q1) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p1 - q1);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Center;\n\t\t\t\tbestOtherSpot = go.Spot.Center;\n\t\t\t}\n\t\t\t// compare left side with left and right sides of OTHER part\n\t\t\tif (Math.abs(p0 - q0) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p0 - q0);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Left;\n\t\t\t\tbestOtherSpot = go.Spot.Left;\n\t\t\t} else if (Math.abs(p0 - q2) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p0 - q2);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Left;\n\t\t\t\tbestOtherSpot = go.Spot.Right;\n\t\t\t}\n\t\t\t// compare right side with left and right sides of OTHER part\n\t\t\tif (Math.abs(p2 - q0) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p2 - q0);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Right;\n\t\t\t\tbestOtherSpot = go.Spot.Left;\n\t\t\t} else if (Math.abs(p2 - q2) < bestDiff) {\n\t\t\t\tbestDiff = Math.abs(p2 - q2);\n\t\t\t\tbestObj = other;\n\t\t\t\tbestSpot = go.Spot.Right;\n\t\t\t\tbestOtherSpot = go.Spot.Right;\n\t\t\t}\n\t\t});\n\n\t\tif (bestObj !== null) {\n\t\t\tconst offsetX = objBounds.x - part.actualBounds.x;\n\t\t\tconst offsetY = objBounds.y - part.actualBounds.y;\n\t\t\tconst bestBounds = bestObj.locationObject.getDocumentBounds();\n\t\t\t// line extends from y0 to y2\n\t\t\tconst y0 = Math.min(objBounds.y, bestBounds.y) - 10;\n\t\t\tconst y2 = Math.max(objBounds.y + objBounds.height, bestBounds.y + bestBounds.height) + 10;\n\t\t\t// find bestObj's desired X\n\t\t\tconst bestPoint = new go.Point().setRectSpot(bestBounds, bestOtherSpot);\n\t\t\tif (bestSpot === go.Spot.Center) {\n\t\t\t\tif (snap) {\n\t\t\t\t\t// call Part.move in order to automatically move member Parts of Groups\n\t\t\t\t\tpart.move(new go.Point(bestPoint.x - objBounds.width / 2 - offsetX, objBounds.y - offsetY));\n\t\t\t\t\tthis.invalidateLinks(part);\n\t\t\t\t}\n\t\t\t\tif (guideline) {\n\t\t\t\t\tthis.guidelineVcenter.position = new go.Point(bestPoint.x, y0);\n\t\t\t\t\tthis.guidelineVcenter.elt(0).height = y2 - y0;\n\t\t\t\t\tthis.diagram.add(this.guidelineVcenter);\n\t\t\t\t}\n\t\t\t} else if (bestSpot === go.Spot.Left) {\n\t\t\t\tif (snap) {\n\t\t\t\t\tpart.move(new go.Point(bestPoint.x - offsetX, objBounds.y - offsetY));\n\t\t\t\t\tthis.invalidateLinks(part);\n\t\t\t\t}\n\t\t\t\tif (guideline) {\n\t\t\t\t\tthis.guidelineVleft.position = new go.Point(bestPoint.x, y0);\n\t\t\t\t\tthis.guidelineVleft.elt(0).height = y2 - y0;\n\t\t\t\t\tthis.diagram.add(this.guidelineVleft);\n\t\t\t\t}\n\t\t\t} else if (bestSpot === go.Spot.Right) {\n\t\t\t\tif (snap) {\n\t\t\t\t\tpart.move(new go.Point(bestPoint.x - objBounds.width - offsetX, objBounds.y - offsetY));\n\t\t\t\t\tthis.invalidateLinks(part);\n\t\t\t\t}\n\t\t\t\tif (guideline) {\n\t\t\t\t\tthis.guidelineVright.position = new go.Point(bestPoint.x, y0);\n\t\t\t\t\tthis.guidelineVright.elt(0).height = y2 - y0;\n\t\t\t\t\tthis.diagram.add(this.guidelineVright);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/*\r\n *  Copyright (C) 1998-2021 by Northwoods Software Corporation. All Rights Reserved.\r\n */\r\n\r\nimport * as go from \"gojs\";\r\nimport { ReactDiagram } from \"gojs-react\";\r\nimport * as React from \"react\";\r\n\r\nimport { GuidedDraggingTool } from \"../GuidedDraggingTool\";\r\n\r\nimport \"./Diagram.css\";\r\n\r\ninterface DiagramProps {\r\n\tnodeDataArray: Array<go.ObjectData>;\r\n\tlinkDataArray: Array<go.ObjectData>;\r\n\tmodelData: go.ObjectData;\r\n\tskipsDiagramUpdate: boolean;\r\n\tonDiagramEvent: (e: go.DiagramEvent) => void;\r\n\tonModelChange: (e: go.IncrementalData) => void;\r\n}\r\n\r\nexport class DiagramWrapper extends React.Component<DiagramProps, {}> {\r\n\t/**\r\n\t * Ref to keep a reference to the Diagram component, which provides access to the GoJS diagram via getDiagram().\r\n\t */\r\n\tprivate diagramRef: React.RefObject<ReactDiagram>;\r\n\r\n\t/** @internal */\r\n\tconstructor(props: DiagramProps) {\r\n\t\tsuper(props);\r\n\t\tthis.diagramRef = React.createRef();\r\n\t}\r\n\r\n\t/**\r\n\t * Get the diagram reference and add any desired diagram listeners.\r\n\t * Typically the same function will be used for each listener, with the function using a switch statement to handle the events.\r\n\t */\r\n\tpublic componentDidMount() {\r\n\t\tif (!this.diagramRef.current) return;\r\n\t\tconst diagram = this.diagramRef.current.getDiagram();\r\n\t\tif (diagram instanceof go.Diagram) {\r\n\t\t\tdiagram.addDiagramListener(\"ChangedSelection\", this.props.onDiagramEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the diagram reference and remove listeners that were added during mounting.\r\n\t */\r\n\tpublic componentWillUnmount() {\r\n\t\tif (!this.diagramRef.current) return;\r\n\t\tconst diagram = this.diagramRef.current.getDiagram();\r\n\t\tif (diagram instanceof go.Diagram) {\r\n\t\t\tdiagram.removeDiagramListener(\"ChangedSelection\", this.props.onDiagramEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Diagram initialization method, which is passed to the ReactDiagram component.\r\n\t * This method is responsible for making the diagram and initializing the model, any templates,\r\n\t * and maybe doing other initialization tasks like customizing tools.\r\n\t * The model's data should not be set here, as the ReactDiagram component handles that.\r\n\t */\r\n\tprivate initDiagram(): go.Diagram {\r\n\t\tconst $ = go.GraphObject.make;\r\n\t\t// set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\r\n\t\tconst diagram = $(go.Diagram, {\r\n\t\t\t\"undoManager.isEnabled\": true, // must be set to allow for model change listening\r\n\t\t\t// 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\r\n\t\t\t\"clickCreatingTool.archetypeNodeData\": {\r\n\t\t\t\ttext: \"new node\",\r\n\t\t\t\tcolor: \"lightblue\",\r\n\t\t\t},\r\n\t\t\tdraggingTool: new GuidedDraggingTool(), // defined in GuidedDraggingTool.ts\r\n\t\t\t\"draggingTool.horizontalGuidelineColor\": \"blue\",\r\n\t\t\t\"draggingTool.verticalGuidelineColor\": \"blue\",\r\n\t\t\t\"draggingTool.centerGuidelineColor\": \"green\",\r\n\t\t\t\"draggingTool.guidelineWidth\": 1,\r\n\t\t\tlayout: $(go.ForceDirectedLayout,{isInitial:false,setsPortSpots:false,}),\r\n\t\t\tmodel: $(go.GraphLinksModel, {\r\n\t\t\t\tlinkKeyProperty: \"key\", // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\r\n\t\t\t\t// positive keys for nodes\r\n\t\t\t\tmakeUniqueKeyFunction: (m: go.Model, data: any) => {\r\n\t\t\t\t\tlet k = data.key || 1;\r\n\t\t\t\t\twhile (m.findNodeDataForKey(k)) k++;\r\n\t\t\t\t\tdata.key = k;\r\n\t\t\t\t\treturn k;\r\n\t\t\t\t},\r\n\t\t\t\t// negative keys for links\r\n\t\t\t\tmakeUniqueLinkKeyFunction: (m: go.GraphLinksModel, data: any) => {\r\n\t\t\t\t\tlet k = data.key || -1;\r\n\t\t\t\t\twhile (m.findLinkDataForKey(k)) k--;\r\n\t\t\t\t\tdata.key = k;\r\n\t\t\t\t\treturn k;\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\t\t// define a simple Node template\r\n\r\n\t\tfunction parseType(s: any) {\r\n\t\t\tswitch (s) {\r\n\t\t\t\tcase \"H\":\r\n\t\t\t\t\treturn go.Panel.Horizontal;\r\n\t\t\t\tcase \"V\":\r\n\t\t\t\t\treturn go.Panel.Vertical;\r\n\t\t\t\tcase \"A\":\r\n\t\t\t\t\treturn go.Panel.Auto;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn go.Panel.Auto;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction routingHandle(s: any) {\r\n\t\t\tswitch (s) {\r\n\t\t\t\tcase \"N\":\r\n\t\t\t\t\treturn go.Link.Normal;\r\n\r\n\t\t\t\tcase \"A\":\r\n\t\t\t\t\treturn go.Link.AvoidsNodes;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn go.Link.Normal;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdiagram.nodeTemplate = $(\r\n\t\t\tgo.Node,\r\n\t\t\t\"Auto\",\r\n\t\t\tnew go.Binding(\"type\", \"type\", parseType),\r\n\t\t\t{ background: \"transparent\" },\r\n\t\t\tnew go.Binding(\"background\", \"background\"), // the Shape will go around the TextBlock\r\n\t\t\tnew go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n\t\t\t$(\r\n\t\t\t\tgo.Shape,\r\n\t\t\t\t{\r\n\t\t\t\t\tfill: \"white\",\r\n\t\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\t\t// set the port properties:\r\n\t\t\t\t\tportId: \"\",\r\n\t\t\t\t\tstrokeJoin: \"round\",\r\n\t\t\t\t\t//, fromLinkable: true, toLinkable: true, cursor: 'pointer'x\r\n\t\t\t\t},\r\n\t\t\t\t// Shape.fill is bound to Node.data.color\r\n\t\t\t\tnew go.Binding(\"fill\", \"color\"),\r\n\t\t\t\tnew go.Binding(\"figure\", \"fig\"),\r\n\t\t\t\tnew go.Binding(\"width\", \"width\"),\r\n\t\t\t\tnew go.Binding(\"height\", \"height\")\r\n\t\t\t),\r\n\r\n\t\t\t$(\r\n\t\t\t\tgo.TextBlock,\r\n\t\t\t\t{ margin: 8, editable: true, font: \"400 .875rem Roboto, sans-serif\" }, // some room around the text\r\n\t\t\t\tnew go.Binding(\"text\").makeTwoWay(),\r\n\t\t\t\tnew go.Binding(\"stroke\", \"stroke\"),\r\n\t\t\t\tnew go.Binding(\"margin\")\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\t// relinking depends on modelData\r\n\t\t// diagram.linkTemplate =\r\n\t\t//   $(go.Link,\r\n\t\t//     new go.Binding('relinkableFrom', 'canRelink').ofModel(),\r\n\t\t//     new go.Binding('relinkableTo', 'canRelink').ofModel(),\r\n\t\t//     $(go.Shape),\r\n\t\t//     $(go.Shape, { toArrow: 'Standard' })\r\n\t\t//   );\r\n\t\t// diagram.groupTemplate = $(\r\n\t\t// \tgo.Group,\r\n\t\t// \t\"Spot\",\r\n\t\t// \t{ layout: $(go.CircularLayout, { spacing: 20, sweepAngle: 360 }) },\r\n\t\t// \t$(\r\n\t\t// \t\tgo.Panel,\r\n\t\t// \t\t\"Auto\",\r\n\t\t// \t\tnew go.Binding(\"type\", \"type\", parseType),\r\n\t\t// \t\t{ background: \"transparent\" },\r\n\t\t// \t\tnew go.Binding(\"background\", \"background\"), // the Shape will go around the TextBlock\r\n\t\t// \t\tnew go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n\t\t// \t\t$(\r\n\t\t// \t\t\tgo.Shape,\r\n\t\t// \t\t\t{\r\n\t\t// \t\t\t\tfill: \"white\",\r\n\t\t// \t\t\t\tstrokeWidth: 1,\r\n\t\t// \t\t\t\t// set the port properties:\r\n\t\t// \t\t\t\tportId: \"\",\r\n\t\t// \t\t\t\tstrokeJoin: \"round\",\r\n\t\t// \t\t\t\t//, fromLinkable: true, toLinkable: true, cursor: 'pointer'x\r\n\t\t// \t\t\t},\r\n\t\t// \t\t\t// Shape.fill is bound to Node.data.color\r\n\t\t// \t\t\tnew go.Binding(\"fill\", \"color\"),\r\n\t\t// \t\t\tnew go.Binding(\"figure\", \"fig\"),\r\n\t\t// \t\t\tnew go.Binding(\"width\", \"width\"),\r\n\t\t// \t\t\tnew go.Binding(\"height\", \"height\")\r\n\t\t// \t\t),\r\n\t\t// \t\t$(\r\n\t\t// \t\t\tgo.TextBlock,\r\n\t\t// \t\t\t{ margin: 8, editable: true, font: \"400 .875rem Roboto, sans-serif\" }, // some room around the text\r\n\t\t// \t\t\tnew go.Binding(\"text\").makeTwoWay(),\r\n\t\t// \t\t\tnew go.Binding(\"margin\")\r\n\t\t// \t\t)\r\n\t\t// \t)\r\n\t\t// );\r\n\t\tdiagram.groupTemplate = $(\r\n\t\t\tgo.Group,\r\n\t\t\t\"Vertical\",\r\n\t\t\tnew go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n\t\t\t$(\r\n\t\t\t\tgo.Panel,\r\n\t\t\t\t\"Auto\",\r\n\t\t\t\tnew go.Binding(\"type\", \"type\", parseType),\r\n\t\t\t\t{ background: \"transparent\" },\r\n\t\t\t\tnew go.Binding(\"background\", \"background\"), // the Shape will go around the TextBlock\r\n\t\t\t\t$(\r\n\t\t\t\t\tgo.Shape,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfill: \"white\",\r\n\t\t\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\t\t\t// set the port properties:\r\n\t\t\t\t\t\tportId: \"\",\r\n\t\t\t\t\t\tstrokeJoin: \"round\",\r\n\t\t\t\t\t\t//, fromLinkable: true, toLinkable: true, cursor: 'pointer'x\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// Shape.fill is bound to Node.data.color\r\n\t\t\t\t\tnew go.Binding(\"fill\", \"color\"),\r\n\t\t\t\t\tnew go.Binding(\"figure\", \"fig\"),\r\n\t\t\t\t\tnew go.Binding(\"width\", \"width\"),\r\n\t\t\t\t\tnew go.Binding(\"height\", \"height\")\r\n\t\t\t\t),\r\n\t\t\t\t$(\r\n\t\t\t\t\tgo.TextBlock,\r\n\t\t\t\t\t{ margin: 8, editable: true, font: \"400 .875rem Roboto, sans-serif\" }, // some room around the text\r\n\t\t\t\t\tnew go.Binding(\"text\").makeTwoWay(),\r\n\t\t\t\t\tnew go.Binding(\"stroke\", \"stroke\"),\r\n\t\t\t\t\tnew go.Binding(\"margin\")\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tdiagram.linkTemplate = $(\r\n\t\t\tgo.Link, // the whole link panel\r\n\t\t\t{\r\n\t\t\t\tselectionAdorned: true,\r\n\t\t\t\tlayerName: \"Foreground\",\r\n\t\t\t\treshapable: true,\r\n\t\t\t\trouting: go.Link.Orthogonal,\r\n\t\t\t\tcorner: 10,\r\n\t\t\t\tangle: 360,\r\n\t\t\t\tcurve: go.Link.JumpOver,\r\n\t\t\t\tsegmentOrientation: go.Link.None,\r\n\t\t\t},\r\n\t\t\tnew go.Binding(\"fromSpot\", \"fromSpot\", go.Spot.parse),\r\n\t\t\tnew go.Binding(\"toSpot\", \"toSpot\", go.Spot.parse),\r\n\t\t\t//new go.Binding('segmentOrientation','seg'),\r\n\t\t\tnew go.Binding(\"routing\", \"routing\", routingHandle),\r\n\t\t\t$(go.Shape,new go.Binding('strokeDashArray', 'dash')),\r\n\t\t\t$(\r\n\t\t\t\tgo.Shape, // the link shape\r\n\t\t\t\t{ stroke: \"#303B45\", strokeWidth: 2.5, toArrow: \"\" },\r\n\t\t\t\tnew go.Binding(\"toArrow\", \"arrow\")\r\n\t\t\t),\r\n\t\t\t$(\r\n\t\t\t\tgo.TextBlock, // the \"from\" label\r\n\t\t\t\t{\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tfont: \"bold 14px sans-serif\",\r\n\t\t\t\t\tstroke: \"#1967B3\",\r\n\t\t\t\t\tsegmentIndex: 0,\r\n\t\t\t\t\tsegmentOffset: new go.Point(NaN, NaN),\r\n\t\t\t\t\tsegmentOrientation: go.Link.None,\r\n\t\t\t\t\tangle: 360,\r\n\t\t\t\t},\r\n\t\t\t\tnew go.Binding(\"alignmentFocus\", \"align\"),\r\n\t\t\t\tnew go.Binding(\"text\", \"text\")\r\n\t\t\t),\r\n\t\t\t$(\r\n\t\t\t\tgo.TextBlock, // the \"to\" label\r\n\t\t\t\t{\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tfont: \"bold 14px sans-serif\",\r\n\t\t\t\t\tstroke: \"#1967B3\",\r\n\t\t\t\t\tsegmentIndex: -1,\r\n\t\t\t\t\tsegmentOffset: new go.Point(NaN, NaN),\r\n\t\t\t\t\tsegmentOrientation: go.Link.OrientUpright,\r\n\t\t\t\t},\r\n\t\t\t\tnew go.Binding(\"text\", \"toText\")\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn diagram;\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<ReactDiagram\r\n\t\t\t\tref={this.diagramRef}\r\n\t\t\t\tdivClassName=\"diagram-component\"\r\n\t\t\t\tinitDiagram={this.initDiagram}\r\n\t\t\t\tnodeDataArray={this.props.nodeDataArray}\r\n\t\t\t\tlinkDataArray={this.props.linkDataArray}\r\n\t\t\t\tmodelData={this.props.modelData}\r\n\t\t\t\tonModelChange={this.props.onModelChange}\r\n\t\t\t\tskipsDiagramUpdate={this.props.skipsDiagramUpdate}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n","import { createToken, Lexer, CstParser } from \"chevrotain\"\r\n\r\nconst True = createToken({ name: \"True\", pattern: /true/ })\r\nconst False = createToken({ name: \"False\", pattern: /false/ })\r\n// const Null = createToken({ name: \"Null\", pattern: /null/ })\r\nconst LCurly = createToken({ name: \"LCurly\", pattern: /{/ })\r\nconst RCurly = createToken({ name: \"RCurly\", pattern: /}/ })\r\nconst LSquare = createToken({ name: \"LSquare\", pattern: /\\[/ })\r\nconst RSquare = createToken({ name: \"RSquare\", pattern: /]/ })\r\nconst LRound = createToken({ name: \"LRound\", pattern: /\\(/ })\r\nconst RRound = createToken({ name: \"RRound\", pattern: /\\)/ })\r\nconst Comma = createToken({ name: \"Comma\", pattern: /,/ })\r\nconst Colon = createToken({ name: \"Colon\", pattern: /:/ })\r\nconst SemiColon = createToken({ name: \"SemiColon\", pattern: /;/ })\r\nconst ENTITY = createToken({ name: \"ENTITY\", pattern: /ENTITY/ })\r\nconst COVERAGE = createToken({ name: \"COVERAGE\", pattern: /COVERAGE/ })\r\nconst CHILD = createToken({ name: \"CHILD\", pattern: /CHILD/ })\r\nconst COMPOSITE = createToken({ name: \"COMPOSITE\", pattern: /COMPOSITE/ })\r\nconst WEAK = createToken({ name: \"WEAK\", pattern: /WEAK/ })\r\nconst RELATIONSHIP = createToken({ name: \"RELATIONSHIP\", pattern: /RELATIONSHIP/ })\r\nconst CALCULATED = createToken({ name: \"CALCULATED\", pattern: /CALCULATED/ })\r\nconst ATTRIBUTES = createToken({ name: \"ATTRIBUTES\", pattern: /ATTRIBUTES/ })\r\nconst IDENTIFIER = createToken({ name: \"IDENTIFIER\", pattern: /IDENTIFIER/ })\r\nconst BY = createToken({ name: \"BY\", pattern: /BY/ })\r\n\r\n// const StringLiteral = createToken({\r\n//   name: \"StringLiteral\",\r\n//   pattern: /\"(:?[^\\\\\"]|\\\\(:?[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"/\r\n// })\r\nconst StringEntity = createToken({\r\n  name: \"StringEntity\",\r\n  pattern: /[a-zA-Z]\\w*/\r\n})\r\nconst sqlExpretion = createToken({\r\n  name: \"sqlExpretion\",\r\n  pattern: /'.*?'/\r\n})\r\n// const NumberLiteral = createToken({\r\n//   name: \"NumberLiteral\",\r\n//   pattern: /-?(0|[1-9]\\d*)(\\.\\d+)?([eE][+-]?\\d+)?/\r\n// })\r\n\r\nconst RelationNumber = createToken({\r\n  name: \"RelationNumber\",\r\n  pattern: /0|1|\\bn\\b|\\bN\\b/\r\n})\r\n// const LOWER_BOUND = createToken({\r\n//   name: \"LOWER_BOUND\",\r\n//   pattern: /\\b0|1\\b/\r\n// })\r\n// const UPPER_BOUND = createToken({\r\n//   name: \"UPPER_BOUND\",\r\n//   pattern: /\\b1|N\\b/\r\n// })\r\n\r\nconst JERARQUIA = createToken({\r\n  name: \"JERARQUIA\",\r\n  pattern: /\\bTOTAL\\b|\\bPARTIAL\\b/\r\n})\r\nconst OF = createToken({\r\n  name: \"OF\",\r\n  pattern: /OF/\r\n})\r\nconst COVERTURA = createToken({\r\n  name: \"COVERTURA\",\r\n  pattern: /\\bEXCLUSIVE\\b|\\bOVERLAPPING\\b/\r\n})\r\n\r\nconst WhiteSpace = createToken({\r\n  name: \"WhiteSpace\",\r\n  pattern: /[ \\t\\n\\r]+/,\r\n  group: Lexer.SKIPPED\r\n})\r\n\r\n\r\nconst allTokens = [ \r\n  LCurly,\r\n  \r\n  RCurly,\r\n  LSquare,\r\n  RSquare,\r\n  Comma,\r\n  Colon,\r\n  True,\r\n  False,\r\n  LRound,\r\n  RRound,\r\n  SemiColon,\r\n  ENTITY,\r\n  COVERAGE,\r\n  CHILD,\r\n  WEAK,\r\n  BY,\r\n  IDENTIFIER,\r\n  COMPOSITE,\r\n  RELATIONSHIP,\r\n  CALCULATED,\r\n  ATTRIBUTES,\r\n  JERARQUIA,\r\n  OF,\r\n  COVERTURA,\r\n  sqlExpretion,\r\n  WhiteSpace,\r\n  RelationNumber,\r\n  StringEntity,\r\n]\r\nconst JsonLexer = new Lexer(allTokens)\r\n\r\nexport class JsonParserTypeScript extends CstParser {\r\n  constructor() {\r\n    super(allTokens)\r\n    this.performSelfAnalysis()\r\n  }\r\n\r\n\r\n  //Empezando con las reglas\r\n  public TypeOfObject = this.RULE(\"TypeOfObject\", () => {\r\n    this.MANY_SEP({\r\n      SEP: SemiColon,\r\n      DEF: () => {\r\n        this.OR([\r\n          { ALT: () => this.SUBRULE(this.entity) },\r\n          { ALT: () => this.SUBRULE(this.composite) },\r\n          { ALT: () => this.SUBRULE(this.relationship) }\r\n        ])\r\n      }\r\n    })\r\n  })\r\n\r\n  private entity = this.RULE(\"Entity\", () => {\r\n    this.CONSUME(ENTITY)\r\n    this.CONSUME(StringEntity)\r\n    this.OPTION(()=>\r\n      this.OR([\r\n        { ALT: () => this.SUBRULE(this.child) },\r\n        { ALT: () => this.SUBRULE(this.coverage) },\r\n        { ALT: () => this.SUBRULE(this.weak) },\r\n      ]))\r\n    this.CONSUME(LCurly)\r\n    this.MANY_SEP({\r\n      SEP: Comma,\r\n      DEF: () => {\r\n        this.SUBRULE(this.propertyEntity)\r\n      }\r\n    })\r\n    this.CONSUME(RCurly)\r\n  })\r\n\r\n  private propertyEntity = this.RULE(\"PropertyEntity\", () => {\r\n    this.CONSUME(StringEntity)\r\n    this.OPTION(()=>\r\n    this.OR([\r\n      { ALT: () => this.CONSUME(IDENTIFIER) },\r\n      { ALT: () => this.SUBRULE(this.manys) },\r\n      {ALT : () => this.SUBRULE(this.calculated)}\r\n    ]))\r\n  })\r\n  // private Calculated = this.RULE(\"propertyEntity\", () => {\r\n  //   this.CONSUME(CALCULATED)\r\n  //   this.CONSUME(BY)\r\n  //   // this.OR([\r\n  //   //   { ALT: () => this.CONSUME(IDENTIFIER) },\r\n  //   // ])\r\n  // })\r\n  \r\n\r\n  private relationship = this.RULE(\"Relationship\", () => {\r\n    this.CONSUME(RELATIONSHIP)\r\n    this.CONSUME(StringEntity)\r\n    this.CONSUME(LCurly)\r\n    this.OPTION({\r\n      DEF: ()=>{\r\n       this.SUBRULE(this.attributesRelation)\r\n      }\r\n    })\r\n    this.MANY_SEP({\r\n      SEP: Comma,\r\n      DEF: () => {\r\n        this.SUBRULE(this.relation)\r\n      }\r\n    })\r\n    this.CONSUME(RCurly)\r\n  })\r\n\r\n  private relation = this.RULE(\"Relation\", () => {\r\n    \r\n    this.CONSUME(StringEntity)\r\n    this.CONSUME(LRound)\r\n    this.CONSUME1(RelationNumber)\r\n    this.CONSUME(Comma)\r\n    this.CONSUME2(RelationNumber)\r\n    this.CONSUME(RRound)\r\n  })\r\n  private attributesRelation = this.RULE(\"AttributesRelation\", () => {\r\n    this.CONSUME(ATTRIBUTES)\r\n    this.CONSUME(LCurly)\r\n    this.MANY_SEP({\r\n      SEP: Comma,\r\n      DEF: () => {\r\n        this.SUBRULE(this.propertyEntity)\r\n      }\r\n    })\r\n    this.CONSUME(RCurly)\r\n  })\r\n  private manys = this.RULE(\"Manys\", () => {    \r\n    this.CONSUME(LRound)\r\n    this.CONSUME1(RelationNumber)\r\n    this.CONSUME(Comma)\r\n    this.CONSUME2(RelationNumber)\r\n    this.CONSUME(RRound)\r\n  })\r\n\r\n  private child = this.RULE(\"Child\", () => {\r\n    \r\n    this.CONSUME(CHILD)\r\n    this.CONSUME(OF)\r\n    this.CONSUME(StringEntity)\r\n  })\r\n  private weak = this.RULE(\"Weak\", () => {\r\n    \r\n    this.CONSUME(WEAK)\r\n    this.CONSUME(OF)\r\n    this.CONSUME(StringEntity)\r\n  })\r\n  private coverage = this.RULE(\"Coverage\", () => {\r\n    \r\n    this.CONSUME(COVERAGE)\r\n    this.CONSUME(LRound)\r\n    this.CONSUME(JERARQUIA)\r\n    this.CONSUME(Comma)\r\n    this.CONSUME(COVERTURA)\r\n    this.CONSUME(RRound)\r\n  })\r\n\r\n  \r\n  //Compuesto\r\n  private composite= this.RULE(\"Composite\", () => {\r\n    this.CONSUME(COMPOSITE)\r\n    this.CONSUME(StringEntity)\r\n    this.CONSUME(LCurly)\r\n    this.AT_LEAST_ONE_SEP({\r\n      SEP: Comma,\r\n      DEF: () => \r\n        this.SUBRULE(this.propierties)\r\n    })\r\n    this.CONSUME(RCurly)\r\n  })\r\n\r\n  \r\n  private calculated=this.RULE(\"Calculated\", () => {\r\n    this.CONSUME(CALCULATED)\r\n    this.CONSUME(BY)\r\n    this.CONSUME(sqlExpretion)\r\n  })\r\n\r\n\r\n  private propierties=this.RULE(\"Propierties\", () => {\r\n    this.CONSUME(StringEntity)\r\n  })\r\n\r\n\r\n  /*private objectItem = this.RULE(\"objectItem\", () => {\r\n    this.CONSUME(StringLiteral)\r\n    this.CONSUME(Colon)\r\n    this.SUBRULE(this.value)\r\n  })\r\n\r\n  private array = this.RULE(\"array\", () => {\r\n    this.CONSUME(LSquare)\r\n    this.MANY_SEP({\r\n      SEP: Comma,\r\n      DEF: () => {\r\n        this.SUBRULE(this.value)\r\n      }\r\n    })\r\n    this.CONSUME(RSquare)\r\n  })\r\n\r\n  private value = this.RULE(\"value\", () => {\r\n    this.OR([\r\n      { ALT: () => this.CONSUME(StringLiteral) },\r\n      { ALT: () => this.CONSUME(NumberLiteral) },\r\n      { ALT: () => this.SUBRULE(this.object) },\r\n      { ALT: () => this.SUBRULE(this.array) },\r\n      { ALT: () => this.CONSUME(True) },\r\n      { ALT: () => this.CONSUME(False) },\r\n      { ALT: () => this.CONSUME(Null) }\r\n    ])\r\n  })*/\r\n}\r\n\r\n// reuse the same parser instance.\r\nexport const parser = new JsonParserTypeScript()\r\n\r\nexport function parseJson(text:any) {\r\n  const lexResult = JsonLexer.tokenize(text)\r\n  // setting a new input will RESET the parser instance's state.\r\n  parser.input = lexResult.tokens\r\n  // any top level rule may be used as an entry point\r\n  const cst = parser.TypeOfObject()\r\n\r\n  // this would be a TypeScript compilation error because our parser now has a clear API.\r\n  // let value = parser.json_OopsTypo()\r\n\r\n  return {\r\n    // This is a pure grammar, the value will be undefined until we add embedded actions\r\n    // or enable automatic CST creation.\r\n    cst: cst,\r\n    lexErrors: lexResult.errors,\r\n    parseErrors: parser.errors\r\n  }\r\n}\r\n","import CodeMirror from \"codemirror\";\r\nimport * as go from \"gojs\";\r\nimport _, { xor } from \"lodash\";\r\nimport { type } from \"os\";\r\nimport { Children } from \"react\";\r\nimport { Children6, Children9, Composite, Entity, PropertyEntity, Relation, Relationship, RootObject } from \"./IParse\";\r\ninterface ArrayOfComposites {\r\n\tnombre: string;\r\n\tatributes: string[];\r\n}\r\n\r\ninterface EntidadVisualisacion {\r\n\tkey: number;\r\n\tweak?:string;\r\n\tnombre: string;\r\n\tparent: number | null;\r\n\tatributes: AtributesVisualisacion[];\r\n}\r\ninterface CompositeVisualisacion {\r\n\tatributes: AtributesVisualisacion[];\r\n}\r\ninterface AtributesVisualisacion {\r\n\tkey: number;\r\n\tnombre: string;\r\n\tidentity: boolean;\r\n\tcomposite?: CompositeVisualisacion;\r\n}\r\ninterface LinkVisualisacion {\r\n\tkey: number;\r\n\tfrom: number;\r\n\tto: number;\r\n}\r\n\r\ninterface VisualisacionDeNodos {\r\n\tEntities: EntidadVisualisacion[];\r\n\tlinks: LinkVisualisacion[];\r\n}\r\ninterface InitialStateOfData {\r\n\tnodeDataArray: INodeDataArray[];\r\n\tlinkDataArray: IlinkDataArray[];\r\n\tmodelData: object;\r\n\tselectedData: any;\r\n\tskipsDiagramUpdate: boolean;\r\n}\r\ninterface INodeDataArray {\r\n\tkey: number;\r\n\ttext: string;\r\n\tcolor: string;\r\n\ttype?: string;\r\n\tgroup?: number;\r\n\tstroke?:string;\r\n\tisGroup?: boolean;\r\n\tmargin?: number;\r\n\tloc?: string;\r\n\tfig?: string;\r\n\theight?: number;\r\n\twidth?: number;\r\n}\r\ninterface IlinkDataArray {\r\n\tKey: number;\r\n\tfrom: number;\r\n\tto: number;\r\n\t//arrow?: string;\r\n\trouting?: string;\r\n\ttext?: string;\r\n\tdash?:any;\r\n\t//toText?: string;\r\n\tfromSpot?: string;\r\n\ttoSpot?: string;\r\n\talign?: object;\r\n}\r\n\r\nexport class ActionsFunctionsClass {\r\n\tKeys = 0;\r\n\tKeysLink = 0;\r\n\tlocation = { H: 0, W: 0 };\r\n\tstateData: InitialStateOfData = undefined as any;\r\n\r\n\ttotalLocation = 0;\r\n\tarrayOfComposites: ArrayOfComposites[] = [];\r\n\tFinalDataNodes: InitialStateOfData = this.initialData();\r\n\tArrayOfNodes: VisualisacionDeNodos = {\r\n\t\tEntities: [],\r\n\t\tlinks: [],\r\n\t};\r\n\r\n\tconstructor() {}\r\n\r\n\tGetLocation = () => {};\r\n\tgetAnCompositeOnArray(data: string) {\r\n\t\tlet returnData;\r\n\t\treturnData = this.arrayOfComposites.find((element) => element.nombre === data);\r\n\t\treturn returnData;\r\n\t}\r\n\tTotalLocation = (number: number) => {\r\n\t\tthis.totalLocation = number * 200;\r\n\t};\r\n\tGetKey = (): number => {\r\n\t\treturn (this.Keys = this.Keys + 1);\r\n\t};\r\n\tGetKeyForLink = (): number => {\r\n\t\treturn (this.KeysLink = this.KeysLink + -1);\r\n\t};\r\n\r\n\tinitialData() {\r\n\t\treturn (this.FinalDataNodes = {\r\n\t\t\tnodeDataArray: [],\r\n\t\t\tlinkDataArray: [],\r\n\t\t\tmodelData: {\r\n\t\t\t\tcanRelink: true,\r\n\t\t\t},\r\n\t\t\tselectedData: true,\r\n\t\t\tskipsDiagramUpdate: false,\r\n\t\t});\r\n\t}\r\n\r\n\tcreateNodeGo = (node: INodeDataArray) => {\r\n\t\treturn {\r\n\t\t\tkey: node.key,\r\n\t\t\ttext: node.text,\r\n\t\t\tcolor: node.color,\r\n\t\t\ttype: node.type || \"A\",\r\n\t\t\tmargin: node.margin || 8,\r\n\t\t\tloc: node.loc,\r\n\t\t\tstroke:node.stroke,\r\n\t\t\tisGroup: node.isGroup || undefined,\r\n\t\t\tfig: node.fig || \"RoundedRectangle\",\r\n\t\t\theight: node.height,\r\n\t\t\twidth: node.width\r\n\t\t};\r\n\t};\r\n\thandleChild = (data: Children9) => {};\r\n\thandleCoverage = (data: Children9) => {};\r\n\thandleWeak = (data: INodeDataArray) => {\r\n\t\tdata.color=\"transparent\"\r\n\r\n\t\t// const entiNode = this.ArrayOfNodes.Entities.find((x) => x.key == key);\r\n\t\t// const atributeNode = entiNode?.atributes?.find((x) => x.identity === true);\r\n\t\t// const entiNumber = this.searchEntityNodeInArrayOfNodes(data.Weak![0].children.StringEntity[0].image) as number;\r\n\t\t// const enti = this.ArrayOfNodes.Entities.find((x) => x.key == entiNumber);\r\n\t\t// const atribute = enti?.atributes?.find((x) => x.identity === true);\r\n\t\t// //console.log(enti);\r\n\t\t// this.FinalDataNodes.linkDataArray.push(\r\n\t\t// \tthis.createPropertiesGo({\r\n\t\t// \t\tKey: this.GetKeyForLink(),\r\n\t\t// \t\tto: atributeNode?.key!,\r\n\t\t// \t\tfrom: atribute?.key!,\r\n\t\t// \t\t//arrow: \"Standard\",\r\n\t\t// \t\trouting: \"N\",\r\n\t\t// \t})\r\n\t\t// );\r\n\t\t\r\n\t};\r\n\r\n\tcreatePropertiesGo(data: IlinkDataArray): IlinkDataArray {\r\n\t\treturn {\r\n\t\t\tKey: data.Key,\r\n\t\t\talign: data.align || undefined,\r\n\t\t\t//arrow: data.arrow || undefined,\r\n\t\t\tfrom: data.from,\r\n\t\t\trouting: data.routing || undefined,\r\n\t\t\tfromSpot: data.fromSpot || undefined,\r\n\t\t\ttext: data.text || undefined,\r\n\t\t\tdash:data.dash || undefined,\r\n\t\t\t// toText: data.toText || undefined\r\n\t\t\tto: data.to,\r\n\t\t\ttoSpot: data.toSpot || undefined,\r\n\t\t};\r\n\t}\r\n\thandlePropertiesOfComposite(data: string, key: number) {\r\n\t\tlet c: INodeDataArray = {\r\n\t\t\tkey: this.GetKey(),\r\n\t\t\ttext: data,\r\n\t\t\tmargin: 15,\r\n\t\t\ttype: \"H\",\r\n\t\t\tcolor: \"transparent\",\r\n\t\t\tfig: \"Ellipse\",\r\n\t\t\theight: 15,\r\n\t\t\tgroup: key,\r\n\t\t\twidth: 15,\r\n\t\t};\r\n\t\tthis.FinalDataNodes.nodeDataArray.push(c);\r\n\t\tthis.FinalDataNodes.linkDataArray.push(\r\n\t\t\tthis.createPropertiesGo({\r\n\t\t\t\tKey: this.GetKeyForLink(),\r\n\t\t\t\tto: c.key,\r\n\t\t\t\tfrom: key,\r\n\t\t\t\t//arrow: \"Standard\",\r\n\t\t\t\trouting: \"N\",\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tmoreThanOneIdentifier(keyOfParent: number, keyIdentifier: number) {\r\n\t\tconst entidadPadre = this.ArrayOfNodes?.Entities?.find((x) => x.key == keyOfParent);\r\n\t\tconst otroIdentificador = entidadPadre?.atributes?.find((x) => x.identity === true);\r\n\t\tif (otroIdentificador && otroIdentificador.key!==keyIdentifier) {\r\n\t\t\tthis.FinalDataNodes?.linkDataArray?.push(\r\n\t\t\t\tthis.createPropertiesGo({\r\n\t\t\t\t\tKey: this.GetKeyForLink(),\r\n\t\t\t\t\tto: keyIdentifier,\r\n\t\t\t\t\tfrom: otroIdentificador.key,\r\n\t\t\t\t\t//arrow: \"Standard\",\r\n\t\t\t\t\trouting: \"N\",\r\n\t\t\t\t\ttext: undefined,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\thandleProperties(data: PropertyEntity[], key: number) {\r\n\t\tconsole.log(data);\r\n\t\tif (data) {\r\n\t\t\tdata.map((x) => {\r\n\t\t\t\tlet c: INodeDataArray = {\r\n\t\t\t\t\tkey: this.GetKey(),\r\n\t\t\t\t\ttext: x.children.StringEntity[0].image,\r\n\t\t\t\t\tmargin: 15,\r\n\t\t\t\t\ttype: \"H\",\r\n\t\t\t\t\tcolor: x.children.IDENTIFIER ? \"black\" : \"transparent\",\r\n\t\t\t\t\tfig: \"Ellipse\",\r\n\t\t\t\t\theight: 15,\r\n\t\t\t\t\tgroup: key,\r\n\t\t\t\t\twidth: 15,\r\n\t\t\t\t};\r\n\t\t\t\t// const resultado = this.nodeIsExistinInPropertyOfNode(c, this.FinalDataNodes);\r\n\r\n\t\t\t\t// if (resultado) {\r\n\t\t\t\t// \tconsole.log(resultado);\r\n\t\t\t\t// \tconsole.log(c);\r\n\t\t\t\t// \tc.loc = resultado.loc;\r\n\t\t\t\t// }\r\n\t\t\t\tconst compositeInfo = this.getAnCompositeOnArray(c.text);\r\n\t\t\t\tif (compositeInfo !== undefined) {\r\n\t\t\t\t\tc.margin = undefined;\r\n\t\t\t\t\tc.type = undefined;\r\n\t\t\t\t\tc.isGroup = true;\r\n\t\t\t\t\tc.height = undefined;\r\n\t\t\t\t\tc.width = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis.FinalDataNodes.nodeDataArray.push(c);\r\n\t\t\t\tif (compositeInfo) {\r\n\t\t\t\t\tcompositeInfo.atributes.map((element) => {\r\n\t\t\t\t\t\tthis.handlePropertiesOfComposite(element, c.key);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tlet enti = this.ArrayOfNodes.Entities.find((x) => x.key == key);\r\n\t\t\t\tif(enti){\r\n\t\t\t\tenti!.atributes.push({\r\n\t\t\t\t\tkey: c.key,\r\n\t\t\t\t\tnombre: c.text,\r\n\t\t\t\t\tidentity: x.children.IDENTIFIER ? true : false,\r\n\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.FinalDataNodes.linkDataArray.push(\r\n\t\t\t\t\tthis.createPropertiesGo({\r\n\t\t\t\t\t\tKey: this.GetKeyForLink(),\r\n\t\t\t\t\t\tto: c.key,\r\n\t\t\t\t\t\tfrom: key,\r\n\t\t\t\t\t\t//arrow: \"Standard\",\r\n\t\t\t\t\t\trouting: \"N\",\r\n\t\t\t\t\t\tdash: x.children.Calculated ? [5,5]:undefined,\r\n\t\t\t\t\t\ttext: this.handleCardinality(x.children),\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\t// if (x.children.IDENTIFIER) {\r\n\t\t\t\t// \tthis.moreThanOneIdentifier(key, c.key);\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleCardinality(child: Children6): string | undefined {\r\n\t\tif (child.Manys) {\r\n\t\t\treturn `(${child.Manys[0].children.RelationNumber[0].image} , ${child.Manys[0].children.RelationNumber[1].image})`;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\thandleRelations(data: Relation[], key: number) {\r\n\t\tdata?.map((x) => {\r\n\t\t\tconst linking: IlinkDataArray = {\r\n\t\t\t\tKey: this.GetKeyForLink(),\r\n\t\t\t\tto: key,\r\n\t\t\t\tfrom: this.searchEntityNodeInArrayOfNodes(x.children.StringEntity[0].image) as number,\r\n\t\t\t\trouting: \"N\",\r\n\t\t\t\ttext: `(${x.children.RelationNumber[0].image} , ${x.children.RelationNumber[1].image})`,\r\n\t\t\t\t//toText: ,\r\n\t\t\t};\r\n\t\t\tthis.FinalDataNodes.linkDataArray.push(this.createPropertiesGo(linking));\r\n\t\t\tthis.ArrayOfNodes.links.push({\r\n\t\t\t\tkey: linking.Key,\r\n\t\t\t\tto: key,\r\n\t\t\t\tfrom: this.searchEntityNodeInArrayOfNodes(x.children.StringEntity[0].image) as number,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tsearchEntityNodeInArrayOfNodes = (buscar: string) => {\r\n\t\tconst entity = this.ArrayOfNodes.Entities.find((x) => x.nombre == buscar);\r\n\t\treturn entity?.key;\r\n\t};\r\n\tsearchParentNodeInArrayOfNodes = (buscar: string) => {\r\n\t\tconst search = this.searchEntityNodeInArrayOfNodes(buscar);\r\n\t\tconst entity = this.ArrayOfNodes.Entities.find((x) => x.parent == search);\r\n\t\treturn entity?.key;\r\n\t};\r\n\tcreateTriangle(parent: number, coverage: string) {\r\n\t\tlet x: INodeDataArray | null = {\r\n\t\t\tkey: this.GetKey(),\r\n\t\t\ttext: coverage,\r\n\t\t\tcolor: \"lawngreen\",\r\n\t\t\tisGroup: true,\r\n\t\t\theight: undefined,\r\n\t\t\twidth: undefined,\r\n\t\t\ttype: \"A\",\r\n\t\t\tmargin: 5,\r\n\t\t\tfig: \"TriangleUp\",\r\n\t\t};\r\n\t\t//creo el nodo padre para despues darle sus propiedades que tambien van a ser nodos hijos\r\n\t\t// const resultado = this.nodeIsExistinInDataNode(x, this.FinalDataNodes);\r\n\r\n\t\t// if (resultado) {\r\n\t\t// \tx.loc = resultado.loc;\r\n\t\t// }\r\n\t\tthis.FinalDataNodes.nodeDataArray.push(this.createNodeGo(x));\r\n\t\tthis.ArrayOfNodes.Entities.push({\r\n\t\t\tkey: x.key,\r\n\t\t\tnombre: x.text,\r\n\t\t\tparent: parent,\r\n\t\t\tatributes: [],\r\n\t\t});\r\n\t\treturn x;\r\n\t}\r\n\tentityAction = (entities: Entity) => {\r\n\t\tlet x: INodeDataArray | null = null;\r\n\t\tif (entities.children) {\r\n\t\t\tx = {\r\n\t\t\t\tkey: this.GetKey(),\r\n\t\t\t\ttext: entities.children.StringEntity[0].image,\r\n\t\t\t\t// color: \"#ff425f\",\r\n\t\t\t\t// stroke:\"white\",\r\n\t\t\t\tcolor:\"pink\",\r\n\t\t\t\tisGroup: true,\r\n\t\t\t};\r\n\t\t\t// const resultado = this.nodeIsExistinInDataNode(x, this.FinalDataNodes);\r\n\t\t\t// if (resultado) {\r\n\t\t\t// \tx.loc = resultado.loc;\r\n\t\t\t// }\r\n\t\t\tif (entities.children.Weak) {\r\n\t\t\t\tthis.handleWeak(x);\r\n\t\t\t}\r\n\t\t\tthis.FinalDataNodes.nodeDataArray.push(this.createNodeGo(x));\r\n\r\n\t\t\tthis.ArrayOfNodes.Entities.push({\r\n\t\t\t\tkey: x.key,\r\n\t\t\t\tnombre: x.text,\r\n\t\t\t\tweak:entities.children.Weak?entities.children.Weak[0].children.StringEntity[0].image:undefined,\r\n\t\t\t\tparent: null,\r\n\t\t\t\tatributes: [],\r\n\t\t\t});\r\n\r\n\t\t\tif (x !== null) {\r\n\t\t\t\t//nnodos hijos del nodo padre x\r\n\t\t\t\tthis.handleProperties(entities?.children?.PropertyEntity, x!.key);\r\n\t\t\t}\r\n\t\t\tif (entities.children.Coverage) {\r\n\t\t\t\tconst triangle = this.createTriangle(\r\n\t\t\t\t\tx.key,\r\n\t\t\t\t\t`(${entities.children.Coverage[0].children.JERARQUIA[0].image.substring(0, 1)}, ${entities.children.Coverage[0].children.COVERTURA[0].image.substring(0, 1)})`\r\n\t\t\t\t);\r\n\t\t\t\tconst linkToChildren: IlinkDataArray = {\r\n\t\t\t\t\tKey: this.GetKeyForLink(),\r\n\t\t\t\t\tto: x.key,\r\n\t\t\t\t\tfrom: triangle.key,\r\n\t\t\t\t\tfromSpot: \"Top\",\r\n\t\t\t\t\ttoSpot: \"Bottom\",\r\n\t\t\t\t};\r\n\t\t\t\tthis.FinalDataNodes.linkDataArray.push(this.createPropertiesGo(linkToChildren));\r\n\t\t\t}\r\n\t\t\tif (entities.children.Child) {\r\n\t\t\t\tconst linkingToParent: IlinkDataArray = {\r\n\t\t\t\t\tKey: this.GetKeyForLink(),\r\n\t\t\t\t\tto: this.searchParentNodeInArrayOfNodes(entities.children.Child[0].children.StringEntity[0].image) as number,\r\n\t\t\t\t\tfrom: x.key,\r\n\t\t\t\t\tfromSpot: \"Top\",\r\n\t\t\t\t\ttoSpot: \"Bottom\",\r\n\t\t\t\t};\r\n\t\t\t\tthis.FinalDataNodes.linkDataArray.push(this.createPropertiesGo(linkingToParent));\r\n\t\t\t} else if (entities.children.Coverage) {\r\n\t\t\t\t//  this.handleCoverage(entities.children);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tRelationshipAction = (relationship: Relationship) => {\r\n\t\tlet x: INodeDataArray | null = null;\r\n\t\tif (relationship.children) {\r\n\t\t\tx = {\r\n\t\t\t\tkey: this.GetKey(),\r\n\t\t\t\ttext: relationship.children.StringEntity[0].image,\r\n\t\t\t\t// color: \"#02a4d9\",\r\n\t\t\t\t// stroke:\"white\",\r\n\t\t\t\tcolor:\"lightblue\",\r\n\t\t\t\tmargin: 2,\r\n\t\t\t\tfig: \"Diamond\",\r\n\t\t\t};\r\n\t\t\tif (relationship.children && x !== null) {\r\n\t\t\t\trelationship.children.Relation.map(child=>{\r\n\r\n\t\t\t\t\tconst aux =this.ArrayOfNodes.Entities.find((f) => f.nombre==child.children.StringEntity[0].image);\r\n\t\t\t\t\tif(aux?.weak ){\r\n\t\t\t\t\t\tif(relationship.children.Relation.some(elemento=>elemento.children.StringEntity[0].image===aux.weak)){\r\n\t\t\t\t\t\t\tx!.color=\"transparent\";\r\n\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t// const resultado = this.nodeIsExistinInDataNode(x, this.FinalDataNodes);\r\n\t\t\t// if (resultado) {\r\n\t\t\t// \tx.loc = resultado.loc;\r\n\t\t\t// }\r\n\t\t\tthis.FinalDataNodes.nodeDataArray.push(this.createNodeGo(x));\r\n\t\t\tif(relationship.children.AttributesRelation){\r\n\t\t\t\tthis.handleProperties(relationship.children.AttributesRelation[0].children.PropertyEntity,x.key)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (relationship.children && x !== null) {\r\n\t\t\tthis.handleRelations(relationship.children.Relation, x!.key);\r\n\t\t}\r\n\t};\r\n\r\n\tcompositeAction = (datos: Composite) => {\r\n\t\tconst variables = datos.children.Propierties.map((x) => {\r\n\t\t\treturn x.children.StringEntity[0].image;\r\n\t\t});\r\n\t\tif (variables) {\r\n\t\t\tconst variable: ArrayOfComposites = {\r\n\t\t\t\tnombre: datos.children.StringEntity[0].image,\r\n\t\t\t\tatributes: variables,\r\n\t\t\t};\r\n\t\t\tthis.arrayOfComposites.push(variable);\r\n\t\t}\r\n\t};\r\n\taddNodeData = () => {};\r\n\t// nodeIsExistinInDataNode(node: INodeDataArray, finalDataNodes: InitialStateOfData) {\r\n\t// \tif (this.stateData) {\r\n\t// \t\tconst resul = this.stateData.nodeDataArray.find((f) => node.text === f.text || node.key === f.key);\r\n\t// \t\t_.remove(this.stateData.nodeDataArray, (x) => x.key === resul?.key);\r\n\t// \t\tif (resul) {\r\n\t// \t\t\treturn resul;\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \treturn false;\r\n\t// }\r\n\tnodeIsExistinInDataNode() {\r\n\t\tif (this.stateData) {\r\n\t\t\tif (this.stateData?.nodeDataArray?.length == this.FinalDataNodes?.nodeDataArray?.length) {\r\n\t\t\t\tthis.FinalDataNodes.nodeDataArray.map((nodoNuevo) => {\r\n\t\t\t\t\tconst nodoViejo = this.stateData.nodeDataArray.find((x) => nodoNuevo.text == x.text);\r\n\t\t\t\t\tif (nodoViejo) {\r\n\t\t\t\t\t\tnodoNuevo.loc = nodoViejo.loc;\r\n\r\n\t\t\t\t\t\t_.remove(this.stateData.nodeDataArray, (f) => f.key === nodoViejo.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.FinalDataNodes.nodeDataArray.map((nodoNuevo) => {\r\n\t\t\t\t\tif (nodoNuevo.loc === undefined) {\r\n\t\t\t\t\t\tconst nodoViejo = this.stateData.nodeDataArray.splice(0, 1);\r\n\t\t\t\t\t\tnodoNuevo.loc = nodoViejo?.[0]?.loc;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (this.stateData.nodeDataArray.length > this.FinalDataNodes.nodeDataArray.length) {\r\n\t\t\t\tthis.FinalDataNodes.nodeDataArray.map((nodoNuevo) => {\r\n\t\t\t\t\tconst nodoViejo = this.stateData.nodeDataArray.find((x) => nodoNuevo.text == x.text);\r\n\t\t\t\t\tif (nodoViejo) {\r\n\t\t\t\t\t\tnodoNuevo.loc = nodoViejo.loc;\r\n\r\n\t\t\t\t\t\t_.remove(this.stateData.nodeDataArray, (f) => f.key === nodoViejo.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (this.stateData.nodeDataArray.length < this.FinalDataNodes.nodeDataArray.length) {\r\n\t\t\t\tthis.FinalDataNodes.nodeDataArray.map((nodoNuevo) => {\r\n\t\t\t\t\tconst nodoViejo = this.stateData.nodeDataArray.find((x) => nodoNuevo.text == x.text);\r\n\t\t\t\t\tif (nodoViejo) {\r\n\t\t\t\t\t\tnodoNuevo.loc = nodoViejo.loc;\r\n\r\n\t\t\t\t\t\t_.remove(this.stateData.nodeDataArray, (f) => f.key === nodoViejo.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// nodeIsExistinInPropertyOfNode(node: INodeDataArray, finalDataNodes: InitialStateOfData) {\r\n\t// \tif (this.stateData) {\r\n\t// \t\tconst resul = this.stateData.nodeDataArray.find((f) => node.text === f.text || node.key === f.key);\r\n\t// \t\t_.remove(this.stateData.nodeDataArray, (x) => x.key === resul?.key);\r\n\t// \t\tif (resul) {\r\n\t// \t\t\treturn resul;\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \treturn false;\r\n\t// }\r\n\t// relationIsExistinInOfRelations(node: IlinkDataArray, finalDataNodes: InitialStateOfData) {\r\n\t// \tconst result = finalDataNodes.linkDataArray.some((f) => (node.Key === f.Key || node.text === f.text) && node.from === f.from && node.to === f.to);\r\n\t// \tif (result) {\r\n\t// \t\treturn result;\r\n\t// \t}\r\n\t// \treturn false;\r\n\t// }\r\n\r\n\tActionsFunctions(x: any, stateData: any) {\r\n\t\tconsole.log(\"🚀 ~ file: myFunctions.ts ~ line 418 ~ ActionsFunctionsClass ~ ActionsFunctions ~ stateData\", stateData);\r\n\t\tthis.FinalDataNodes = this.initialData();\r\n\r\n\t\tthis.stateData = JSON.parse(JSON.stringify(stateData));\r\n\r\n\t\tthis.Keys = 0;\r\n\t\tthis.KeysLink = 0;\r\n\t\tthis.totalLocation = 0;\r\n\t\tthis.arrayOfComposites = [];\r\n\t\t//this.initialData();\r\n\t\t// const resul = this.stateData.nodeDataArray.find((f) => f.group! > 0 && f.isGroup === true);\r\n\t\t// if (resul) {\r\n\t\t// \t_.remove(this.stateData.nodeDataArray, (x) => x.group === resul.key);\r\n\t\t// }\r\n\t\tthis.ArrayOfNodes = {\r\n\t\t\tEntities: [],\r\n\t\t\tlinks: [],\r\n\t\t};\r\n\t\tif (x) {\r\n\t\t\tconst data: RootObject = x;\r\n\r\n\t\t\tlet Entity = data.Entity;\r\n\t\t\tconst Relationship = data.Relationship || [];\r\n\t\t\tconst Composite = data.Composite || [];\r\n\t\t\tComposite?.map((x: Composite) => {\r\n\t\t\t\tthis.compositeAction(x);\r\n\t\t\t});\r\n\t\t\tEntity?.map((x: Entity) => {\r\n\t\t\t\tthis.entityAction(x);\r\n\t\t\t});\r\n\t\t\tRelationship?.map((x: Relationship) => {\r\n\t\t\t\tthis.RelationshipAction(x);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.nodeIsExistinInDataNode();\r\n\t\t//console.log(this.FinalDataNodes);\r\n\t\treturn this.FinalDataNodes;\r\n\t}\r\n}\r\n","import _ from \"lodash\";\r\nimport { Children6, Children9, Composite, Entity, PropertyEntity, Relation, Relationship, RootObject } from \"./IParse\";\r\nexport function markInputErrors(lexErrors: any, parseErrors: any, inputEditor: any, inputEditorMark: any[], setInputMarket: any) {\r\n\ttry {\r\n\t\tvar start, end, marker;\r\n\t\tlet inputEditorMarkers: any[] = inputEditorMark;\r\n\t\t_.forEach(inputEditorMarkers, function (currMarker) {\r\n\t\t\tcurrMarker.clear();\r\n\t\t});\r\n\t\tinputEditorMarkers = [];\r\n\t\t_.forEach(lexErrors, function (currLexError) {\r\n\t\t\tstart = { line: currLexError.line - 1, ch: currLexError.column - 1 };\r\n\t\t\tend = {\r\n\t\t\t\tline: currLexError.line - 1,\r\n\t\t\t\tch: currLexError.column - 1 + currLexError.length,\r\n\t\t\t};\r\n\t\t\tmarker = inputEditor.markText(start, end, {\r\n\t\t\t\tclassName: \"markTextError\",\r\n\t\t\t\ttitle: currLexError.message,\r\n\t\t\t});\r\n\t\t\tinputEditorMarkers.push(marker);\r\n\t\t});\r\n\t\t_.forEach(parseErrors, function (currParserError) {\r\n\t\t\tif (!isNaN(currParserError.token.startLine) \r\n\t\t\t&& !isNaN(currParserError.token.startOffset) \r\n\t\t\t&& !isNaN(currParserError.token.endOffset) \r\n\t\t\t&& !isNaN(currParserError.token.endLine)){\r\n\t\t\t\tstart = {\r\n\t\t\t\t\tline: currParserError.token.startLine - 1,\r\n\t\t\t\t\tch: currParserError.token.startColumn - 1,\r\n\t\t\t\t};\r\n\r\n\t\t\tvar lastToken = currParserError.token;\r\n\t\t\tif (!_.isEmpty(currParserError.resyncedTokens)) {\r\n\t\t\t\tconst x: any = _.max(currParserError.resyncedTokens);\r\n\t\t\t\tlastToken = x.startOffset;\r\n\t\t\t}\r\n\r\n\t\t\tend = {\r\n\t\t\t\tline: lastToken.endLine\r\n\t\t\t\t\t? lastToken.endLine - 1\r\n\t\t\t\t\t: // assume startLine === endLine if we endLine is not tracked\r\n\t\t\t\t\t  lastToken.startLine - 1,\r\n\t\t\t\tch: lastToken.endColumn\r\n\t\t\t\t\t? lastToken.endColumn\r\n\t\t\t\t\t: // compute the endColumn ourselves\r\n\t\t\t\t\t  lastToken.startColumn + lastToken.image.length,\r\n\t\t\t};\r\n\t\t\tmarker = inputEditor.markText(start, end, {\r\n\t\t\t\tclassName: \"markTextError\",\r\n\t\t\t\ttitle: currParserError?.message,\r\n\t\t\t});\r\n\r\n\t\t\tinputEditorMarkers.push(marker);\r\n\t\t}\r\n\t\t});\r\n\r\n\t\t//console.log(inputEditorMarkers);\r\n\t\tsetInputMarket(inputEditorMarkers);\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n}\r\n//inputEditor.on(\"change\", _.debounce(onInputEditorContentChange, 250))\r\nexport function onInputEditorContentChange(inputEditor: any, inputEditorMarkers: any, setInputMarket: any, lex: any) {\r\n\tvar parseResult, printResult;\r\n\r\n\t// function lex(text) {\r\n\t//     var lexResult = lexer.tokenize(text)\r\n\t//     return lexResult\r\n\t// }\r\n\r\n\t// function parse(lexResult, startRuleName) {\r\n\t//     parser.reset()\r\n\t//     parser.input = lexResult.tokens\r\n\t//     var value = parser[startRuleName]()\r\n\t//     return {value: value, parseErrors: parser.errors}\r\n\t// }\r\n\r\n\t// parserOutput.setValue(\"\")\r\n\t// var lexResult = lex(inputEditor.getValue())\r\n\t// may be falsy if the example is for the lexer only\r\n\r\n\tmarkInputErrors(lex.lexErrors, lex.parseErrors, inputEditor, inputEditorMarkers, setInputMarket);\r\n}\r\nexport function FindErrors(codemirror: any, inputEditorMark: any[], setInputMarket: any, datafind: any) {\r\n\tlet inputEditorMarkers: any[] = inputEditorMark;\r\n\t_.forEach(inputEditorMarkers, function (currMarker) {\r\n\t\tcurrMarker.clear();\r\n\t});\r\n\tinputEditorMarkers = [];\r\n\tconst data: RootObject = datafind;\r\n\tconsole.log(data);\r\n\tlet Entity = data.Entity;\r\n\tconst Relationship = data.Relationship || [];\r\n\tconst Composite = data.Composite || [];\r\n\tlet mapOfObjects = new Map<string, object>();\r\n\tlet mapOfRepeatsObjects = new Map<string, object>();\r\n\tlet repeat = 0;\r\n\tComposite?.map((x: Composite) => {\r\n\t\tif (mapOfObjects.has(x.children.StringEntity[0].image)) {\r\n\t\t\tmapOfRepeatsObjects.set(x.children.StringEntity[0].image, x);\r\n\t\t} else {\r\n\t\t\tmapOfObjects.set(x.children.StringEntity[0].image, x);\r\n\t\t}\r\n\t});\r\n\tEntity?.map((x: Entity) => {\r\n\t\tif (mapOfObjects.has(x.children.StringEntity[0].image)) {\r\n\t\t\tmapOfRepeatsObjects.set(x.children.StringEntity[0].image, x);\r\n\t\t} else {\r\n\t\t\tmapOfObjects.set(x.children.StringEntity[0].image, x);\r\n\t\t}\r\n\t});\r\n\tRelationship?.map((x: Relationship) => {\r\n\t\tif (mapOfObjects.has(x.children.StringEntity[0].image)) {\r\n\t\t\tmapOfRepeatsObjects.set(x.children.StringEntity[0].image, x);\r\n\t\t} else {\r\n\t\t\tmapOfObjects.set(x.children.StringEntity[0].image, x);\r\n\t\t}\r\n\t});\r\n\tmapOfRepeatsObjects?.forEach((x: any) => {\r\n\t\trepeat = repeat + 1;\r\n\t\tconst start = {\r\n\t\t\tline: x.children.StringEntity[0].startLine - 1,\r\n\t\t\tch: x.children.StringEntity[0].startColumn - 1,\r\n\t\t};\r\n\r\n\t\tconst end = {\r\n\t\t\tline: x.children.StringEntity[0].endLine - 1,\r\n\t\t\tch: x.children.StringEntity[0].endColumn,\r\n\t\t};\r\n\r\n\t\tconst marker = codemirror.markText(start, end, {\r\n\t\t\tclassName: \"markTextError\",\r\n\t\t\ttitle: \"Elemento repetido\",\r\n\t\t});\r\n\t\tinputEditorMarkers.push(marker);\r\n\t});\r\n\r\n\tsetInputMarket(inputEditorMarkers);\r\n\treturn repeat;\r\n}\r\n","import { parseJson } from \"./MyLex\";\r\nimport assert from \"assert\";\r\nimport { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport \"./parser.css\";\r\nimport { ActionsFunctionsClass } from \"./myFunctions\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport \"codemirror/addon/display/autorefresh\";\r\nimport \"codemirror/addon/comment/comment\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/keymap/sublime\";\r\nimport \"codemirror/theme/dracula.css\";\r\nimport { stringExample } from \"./example\";\r\nimport { FindErrors, onInputEditorContentChange } from \"./errors\";\r\nimport _, { initial } from \"lodash\";\r\nimport { DataOfNodes } from \"../text\";\r\nimport React from \"react\";\r\n/*interface IParserGenerator {\r\n  text: string;\r\n}*/\r\n\r\nexport const ParserGenerator = ({ changeStateCallback, stateData, textoState,setTextoState }: any) => {\r\n\t/*const createDataNodes=()=>{\r\n    changeStateCallback();\r\n  }*/\r\n\tlet action: ActionsFunctionsClass = useMemo(() => new ActionsFunctionsClass(), []);\r\n\r\n\t//let action:ActionsFunctionsClass=new ActionsFunctionsClass()\r\n\t/* console.log(changeStateCallback);\r\n  console.log(nodeData);*/\r\n\tconst IniState = {\r\n\t\tnodeDataArray: [],\r\n\t\tlinkDataArray: [\r\n\t\t\t// { key: -1, from: 0, to: 1, },\r\n\t\t\t// { key: -2, from: 0, to: 2 },\r\n\t\t\t// { key: -3, from: 1, to: 1 },\r\n\t\t\t// { key: -4, from: 2, to: 3 },\r\n\t\t\t// { key: -5, from: 3, to: 0 }//text: \"( T , S )\",align: new go.Spot(1, 0, 5, 5),\r\n\t\t],\r\n\t\tmodelData: {\r\n\t\t\tcanRelink: true,\r\n\t\t},\r\n\t\tselectedData: null,\r\n\t\tskipsDiagramUpdate: false,\r\n\t};\r\n\t\r\n\tconst [inputEditorMarker, setInputEditorMarker] = useState<any[]>([]);\r\n\t// const [texto, setTexto] = useState<string>(\"COMPOSITE domicilio {ciudad,calle,numero};\"\r\n\t// +\" RELATIONSHIP compro{    factura (1, 1),    persona (1, N)};\"\r\n\t// +\"ENTITY proveedor CHILD OF persona{cuit IDENTIFIER };\"\r\n\t// +\"ENTITY persona COVERAGE (PARTIAL, OVERLAY){documento IDENTIFIER, cuil IDENTIFIER,nacimiento,apellido,nombre,    celular (0,1),   domicilio  }\");\r\n\t// const [texto, setTexto] = useState<string>(stringExample);\r\n\tconst handleSubmit = (lexAndParseResult: any, instance: CodeMirror.Editor) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"🚀 ~ file: ParserGenerator.tsx ~ line 60 ~ useEffect ~ stateData\", stateData);\r\n\t\t\tconsole.log(\"🚀 ~ file: ParserGenerator.tsx ~ line 27 ~ handleSubmit ~ ñexAndParseResult.lexErrors.length\", lexAndParseResult.lexErrors.length);\r\n\t\t\tassert.strictEqual(lexAndParseResult.lexErrors.length, 0);\r\n\t\t\tconsole.log(\"🚀 ~ file: ParserGenerator.tsx ~ line 29 ~ handleSubmit ~ lexAndParseResult.parseErrors\", lexAndParseResult.parseErrors);\r\n\r\n\t\t\tassert.strictEqual(lexAndParseResult.parseErrors.length, 0);\r\n\t\t\tconsole.log(\"🚀 ~ file: ParserGenerator.tsx ~ line 32 ~ handleSubmit ~ lexAndParseResult\", lexAndParseResult);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t\tif (lexAndParseResult.cst &&(lexAndParseResult?.parseErrors?.length === 0) && (lexAndParseResult?.lexErrors?.length === 0)) {\r\n\t\t\tconst FindRepeatsWords = FindErrors(instance, inputEditorMarker, setInputEditorMarker, lexAndParseResult.cst.children);\r\n\t\t\tconsole.log(FindRepeatsWords);\r\n\t\t\tif (FindRepeatsWords === 0) {\r\n\t\t\t\treturn lexAndParseResult.cst.children;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\tconst CreateTree = (children: any, stateData: any,textoo:string) => {\r\n\t\tconst result = action.ActionsFunctions(children, stateData);\r\n\r\n\t\tif (result) {\r\n\t\t\t//setState(lexAndParseResult.cst.children);\r\n\t\t\tchangeStateCallback(result,textoo);\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tconsole.log(inputEditorMarker);\r\n\t}, [inputEditorMarker]);\r\n\r\n\t//{ \"arr\": [1,2,3], \"obj\": {\"num\":666}}\r\n\tconst handleChange = React.useCallback(\r\n\t\t(instance: CodeMirror.Editor, change: any) => {\r\n\t\t\tsetTextoState(instance.getValue())\r\n\t\t\tconst lexAndParseResult = parseJson(instance.getValue());\r\n\t\t    onInputEditorContentChange(instance, inputEditorMarker, setInputEditorMarker, lexAndParseResult);\r\n\t\t\tconst children = handleSubmit(lexAndParseResult, instance);\r\n\t\t\tif (children) {\r\n\t\t\t\tCreateTree(children, stateData,instance.getValue());\r\n\t\t\t}\r\n\t\t},\r\n\t\t[stateData, inputEditorMarker, handleSubmit]\r\n\t);\r\n\tconst debo = useMemo(() => _.debounce(handleChange, 2000), [handleChange]);\r\n\r\n\t// const ref = useRef(initialValue)\r\n\r\n\treturn (\r\n\t\t<div className=\"w-full h-full parse-generator\">\r\n\t\t\t{/* <textarea\r\n            style={{width:'100%'}}\r\n            value={texto}\r\n            \r\n            onChange={handleChange}\r\n          /> */}\r\n\t\t\t<CodeMirror\r\n\t\t\t\tvalue={textoState}\r\n\t\t\t\tonChange={debo}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tmode: \"text\",\r\n\t\t\t\t\tlineNumbers: true,\r\n\t\t\t\t\ttheme: \"dracula\",\r\n\t\t\t\t\ttabSize: 1,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{/* <input type=\"submit\" value=\"Submit\" className=\"submit-btn\"/> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { faArrowLeft, faBackspace } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const MainHelp = () => {\r\n\tconst informacion = [\"Entidades\", \"Atributos\", \"Relaciones\", \"Herencia\", \"Ejemplo\"];\r\n\tconst [openInfo, setopenInfo] = useState(\"\");\r\n\r\n\tconst Back = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetopenInfo(\"\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"border-gray-200 rounded-md border-2 p-1\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faArrowLeft} /> VOLVER\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\tconst informationOfHelp = (elemento: any) => {\r\n\t\tswitch (elemento) {\r\n\t\t\tcase \"Entidades\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Back />\r\n\t\t\t\t\t\t<div className=\"text-2xl text-center py-2\">Entidades</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">Las entidades representan clases de objetos de la realidad</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">El siguiente es un ejemplo de la entidad Producto con </div>\r\n\t\t\t\t\t\t<div className=\"py-2 whitespace-pre-line\">\r\n\t\t\t\t\t\t\t{`ENTITY producto{\r\n\t\t\t\t\t\t\tcodigo IDENTIFIER,\r\n\t\t\t\t\t\t\tdescripcion\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase \"Relaciones\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Back />\r\n\t\t\t\t\t\t<div className=\"text-2xl text-center py-2\">Relaciones</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">Las relaciones representan agregaciones de dos o más entidades</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">El siguiente es un ejemplo de una relacion entre producto y linea </div>\r\n\t\t\t\t\t\t<div className=\"py-2 whitespace-pre-line\">\r\n\t\t\t\t\t\t\t{`ENTITY Ciudad{\r\nnombre,\r\ncodigo_postal IDENTIFIER,\r\ncantidad_habitantes CALCULATED BY 'COUNT(DNI)'\r\n};\r\nRELATIONSHIP VIVE_EN{\r\nCiudad(1,N),\r\nPersona(1,1)\r\n};\r\nENTITY Persona{\r\nnombre,\r\napellido,\r\nDNI IDENTIFIER\r\n}`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase \"Atributos\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Back />\r\n\t\t\t\t\t\t<div className=\"text-2xl text-center py-2\">Atributos</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">representan las propiedades básicas de las entidades o relaciones</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">El siguiente es un ejemplo de persona con atributos simples calculados y compuestos</div>\r\n\t\t\t\t\t\t<div className=\"py-2 whitespace-pre-line\">\r\n\t\t\t\t\t\t\t{`\r\n\t\t\t\t\t\t\tCOMPOSITE domicilio{\r\n\t\t\t\t\t\t\t\tciudad,\r\n\t\t\t\t\t\t\t\tcalle,\r\n\t\t\t\t\t\t\t\tnumero\r\n\t\t\t\t\t\t\t};\r\n                            ENTITY persona{\r\n                                documento IDENTIFIER,\r\n                                cuil IDENTIFIER,\r\n                                nacimiento,\r\n                                edad CALCULATED BY 'HOY - nacimiento',\r\n                                nombre,\r\n                                celular (0,1),\r\n                                domicilio\r\n                            }\r\n                            `}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase \"Herencia\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Back />\r\n\t\t\t\t\t\t<div className=\"text-2xl text-center py-2\">Herencia</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">Una abstracción de generalización establece una correspondencia entre la clase genérica \"(raíz)\" y las clases subconjunto.</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">El siguiente es un ejemplo de herencia para la clase persona.</div>\r\n\t\t\t\t\t\t<div className=\"py-2 whitespace-pre-line\">\r\n\t\t\t\t\t\t\t{`\r\n                            ENTITY persona COVERAGE (PARTIAL, OVERLAPPING){\r\n                                documento IDENTIFIER,\r\n                                cuil IDENTIFIER,\r\n                                nacimiento,\r\n                                edad CALCULATED BY 'HOY - nacimiento',\r\n                                nombre,\r\n                                celular (0,1),\r\n                                domicilio\r\n                            };\r\n                            \r\n                            ENTITY proveedor CHILD OF persona{\r\n                                cuit IDENTIFIER \r\n                            };\r\n                            ENTITY proveedorer CHILD OF persona{\r\n                                cuit IDENTIFIER \r\n                            }\r\n                            `}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase \"Ejemplo\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Back />\r\n\t\t\t\t\t\t<div className=\"text-2xl text-center py-2\">Ejemplo</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">El ejemplode abajo es un modelo típico de factura</div>\r\n\t\t\t\t\t\t<div className=\"py-2\">podes copiarlo y pegarlo en la aplicacion</div>\r\n\t\t\t\t\t\t<div className=\"py-2 whitespace-pre-line\">\r\n\t\t\t\t\t\t\t{`\r\n                        COMPOSITE domicilio{\r\n\t\t\t\t\t\t\tciudad,\r\n\t\t\t\t\t\t\tcalle,\r\n\t\t\t\t\t\t\tnumero\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tENTITY persona COVERAGE (PARTIAL, OVERLAPPING){\r\n\t\t\t\t\t\t\tdocumento IDENTIFIER,\r\n\t\t\t\t\t\t\tcuil IDENTIFIER,\r\n\t\t\t\t\t\t\tnacimiento,\r\n\t\t\t\t\t\t\tedad CALCULATED BY 'HOY - nacimiento',\r\n\t\t\t\t\t\t\tnombre,\r\n\t\t\t\t\t\t\tcelular (0,1),\r\n\t\t\t\t\t\t\tdomicilio\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tENTITY proveedor CHILD OF persona{\r\n\t\t\t\t\t\t\tcuit IDENTIFIER \r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tENTITY empleado CHILD OF persona{\r\n\t\t\t\t\t\t\tlegajo IDENTIFIER\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tENTITY factura{\r\n\t\t\t\t\t\t\ttipo IDENTIFIER,\r\n\t\t\t\t\t\t\tnumero,\r\n\t\t\t\t\t\t\tfecha,\r\n\t\t\t\t\t\t\ttotal CALCULATED BY 'SUM(linea.subtotal)'\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tRELATIONSHIP atendio{\r\n\t\t\t\t\t\t\tfactura (1, 1),\r\n\t\t\t\t\t\t\templeado (1, N)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tRELATIONSHIP compro{\r\n\t\t\t\t\t\t\tfactura (1, 1),\r\n\t\t\t\t\t\t\tpersona (1, N)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tENTITY linea WEAK OF factura{\r\n\t\t\t\t\t\t\tnumero IDENTIFIER,\r\n\t\t\t\t\t\t\tprecio,\r\n\t\t\t\t\t\t\tcantidad,\r\n\t\t\t\t\t\t\tsubtotal CALCULATED BY 'precio * cantidad'\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tENTITY producto{\r\n\t\t\t\t\t\t\tcodigo IDENTIFIER,\r\n\t\t\t\t\t\t\tdescripcion\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tRELATIONSHIP tiene{\r\n\t\t\t\t\t\t\tlinea (1, 1),\r\n\t\t\t\t\t\t\tproducto (1, N)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tRELATIONSHIP provee{\r\n\t\t\t\t\t\t\tproducto (1, N),\r\n\t\t\t\t\t\t\tproveedor (1, N)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tRELATIONSHIP pertenece{\r\n\t\t\t\t\t\t\tlinea (1, 1),\r\n\t\t\t\t\t\t\tfactura (1, N)\r\n\t\t\t\t\t\t}\r\n                            `}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"w-full\">\r\n\t\t\t{!!!openInfo &&\r\n\t\t\t\tinformacion.map((element) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"text-2xl text-gray-200 py-2 px-4 cursor-pointer\"\r\n\t\t\t\t\t\tkey={element}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetopenInfo(element);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>{element}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t{!!openInfo && <div className=\"text-gray-200 p-2\">{informationOfHelp(openInfo)}</div>}\r\n\t\t</div>\r\n\t);\r\n};\r\n","/*\r\n *  Copyright (C) 1998-2021 by Northwoods Software Corporation. All Rights Reserved.\r\n */\r\n\r\nimport * as go from \"gojs\";\r\nimport { produce } from \"immer\";\r\nimport * as React from \"react\";\r\n\r\nimport { DiagramWrapper } from \"./components/DiagramWrapper\";\r\nimport { SelectionInspector } from \"./components/SelectionInspector\";\r\n\r\nimport { useState } from \"react\";\r\nimport { ParserGenerator } from \"./parser/ParserGenerator\";\r\nimport \"./text\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DataOfNodes } from \"./text\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { MainHelp } from \"./components/help-info/MainHelp.component\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDownload, faPen, faPlus, faQuestion, faSave, faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\n/**\r\n * Use a linkDataArray since we'll be using a GraphLinksModel,\r\n * and modelData for demonstration purposes. Note, though, that\r\n * both are optional props in ReactDiagram.\r\n */\r\ninterface AppState {\r\n\tnodeDataArray: Array<go.ObjectData>;\r\n\tlinkDataArray: Array<go.ObjectData>;\r\n\tmodelData: go.ObjectData;\r\n\tselectedData: go.ObjectData | null;\r\n\tskipsDiagramUpdate: boolean;\r\n}\r\n\r\nconst App = (props: object) => {\r\n\t// Maps to store key -> arr index for quick lookups\r\n\tconst mapNodeKeyIdx: Map<go.Key, number> = new Map<go.Key, number>();\r\n\tconst mapLinkKeyIdx: Map<go.Key, number> = new Map<go.Key, number>();\r\n\r\n\tconst IniState = {\r\n\t\tnodeDataArray: [],\r\n\t\tlinkDataArray: [\r\n\t\t\t// { key: -1, from: 0, to: 1, },\r\n\t\t\t// { key: -2, from: 0, to: 2 },\r\n\t\t\t// { key: -3, from: 1, to: 1 },\r\n\t\t\t// { key: -4, from: 2, to: 3 },\r\n\t\t\t// { key: -5, from: 3, to: 0 }//text: \"( T , S )\",align: new go.Spot(1, 0, 5, 5),\r\n\t\t],\r\n\t\tmodelData: {\r\n\t\t\tcanRelink: true,\r\n\t\t},\r\n\t\tselectedData: null,\r\n\t\tskipsDiagramUpdate: false,\r\n\t};\r\n\tconst example = {\r\n\t\tnodeDataArray: [\r\n\t\t\t{\r\n\t\t\t\tkey: 0,\r\n\t\t\t\ttext: \"Entity\",\r\n\t\t\t\tcolor: \"lightblue\",\r\n\t\t\t\tfig: \"RoundedRectangle\",\r\n\t\t\t\tloc: \"-200 0\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 1,\r\n\t\t\t\ttext: \"Suppliers\",\r\n\t\t\t\tcolor: \"orange\",\r\n\t\t\t\tfig: \"RoundedRectangle\",\r\n\t\t\t\tloc: \"200 0\",\r\n\t\t\t\tisGroup: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 2,\r\n\t\t\t\ttext: \"Gamma\",\r\n\t\t\t\tcolor: \"transparent\",\r\n\t\t\t\tfig: \"Diamond\",\r\n\t\t\t\tmargin: 2,\r\n\t\t\t\tloc: \"0 0\",\r\n\t\t\t},\r\n\t\t\t//  { key: 3, text: 'Delta', color: 'pink' ,fig:\"RoundedRectangle\"},\r\n\t\t\t{\r\n\t\t\t\tkey: 4,\r\n\t\t\t\ttype: \"H\",\r\n\t\t\t\ttext: \"Id\",\r\n\t\t\t\tmargin: 5,\r\n\t\t\t\tcolor: \"transparent\",\r\n\t\t\t\tloc: \"200 50\",\r\n\t\t\t\tgroup: 1,\r\n\t\t\t\tfig: \"Ellipse\",\r\n\t\t\t\theight: 15,\r\n\t\t\t\twidth: 15,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 5,\r\n\t\t\t\ttext: \"( T , S )\",\r\n\t\t\t\tcolor: \"Green\",\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\tfig: \"TriangleUp\",\r\n\t\t\t\tloc: \"0 200\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 6,\r\n\t\t\t\ttext: \"Entity\",\r\n\t\t\t\tcolor: \"lightblue\",\r\n\t\t\t\tfig: \"RoundedRectangle\",\r\n\t\t\t\tloc: \"0 200\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 7,\r\n\t\t\t\ttext: \"Suppliers\",\r\n\t\t\t\tcolor: \"orange\",\r\n\t\t\t\tfig: \"RoundedRectangle\",\r\n\t\t\t\tloc: \"-400 200\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 8,\r\n\t\t\t\ttext: \"Suppliers\",\r\n\t\t\t\tcolor: \"orange\",\r\n\t\t\t\tfig: \"RoundedRectangle\",\r\n\t\t\t\tloc: \"-600 200\",\r\n\t\t\t},\r\n\t\t],\r\n\t\tlinkDataArray: [\r\n\t\t\t// { key: -1, from: 0, to: 1, },\r\n\t\t\t// { key: -2, from: 0, to: 2 },\r\n\t\t\t// { key: -3, from: 1, to: 1 },\r\n\t\t\t// { key: -4, from: 2, to: 3 },\r\n\t\t\t// { key: -5, from: 3, to: 0 }//text: \"( T , S )\",align: new go.Spot(1, 0, 5, 5),\r\n\t\t\t{ Key: -1, from: 0, to: 2, text: \"0..N\", toText: \"1\" },\r\n\t\t\t{ Key: -2, from: 1, to: 2, text: \"1\", toText: \"1\" },\r\n\t\t\t{\r\n\t\t\t\tkey: -3,\r\n\t\t\t\tfrom: 1,\r\n\t\t\t\tto: 4,\r\n\t\t\t\ttext: \"(0,N)\",\r\n\t\t\t\tarrow: \"Standard\",\r\n\t\t\t\trouting: \"N\",\r\n\t\t\t},\r\n\t\t\t{ Key: -4, from: 0, to: 5, fromSpot: \"Bottom\", toSpot: \"Top\" },\r\n\t\t\t{ Key: -5, from: 5, to: 6, fromSpot: \"Bottom\", toSpot: \"Top\" },\r\n\t\t\t{ key: -6, from: 5, to: 7, fromSpot: \"Bottom\", toSpot: \"Top\" },\r\n\t\t\t{ key: -7, from: 5, to: 8, fromSpot: \"Bottom\", toSpot: \"Top\" },\r\n\t\t],\r\n\t\tmodelData: {\r\n\t\t\tcanRelink: true,\r\n\t\t},\r\n\t\tselectedData: null,\r\n\t\tskipsDiagramUpdate: false,\r\n\t};\r\n\r\n\tconst [state, setState] = useState<any>(IniState);\r\n\tconst [textoState, setTextoState] = useState<string>(\"\");\r\n\tconst [animation, setAnimationState] = useState(true);\r\n\tconst [helpTodo, sethelpTodo] = useState(false);\r\n\t// init maps\r\n\t// bind handler methods\r\n\r\n\t/**\r\n\t * Update map of node keys to their index in the array.\r\n\t */\r\n\tconst refreshNodeIndex = (nodeArr: Array<go.ObjectData>) => {\r\n\t\tmapNodeKeyIdx.clear();\r\n\t\tnodeArr?.forEach((n: go.ObjectData, idx: number) => {\r\n\t\t\tmapNodeKeyIdx.set(n.key, idx);\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Update map of link keys to their index in the array.\r\n\t */\r\n\tconst refreshLinkIndex = (linkArr: Array<go.ObjectData>) => {\r\n\t\tmapLinkKeyIdx.clear();\r\n\t\tlinkArr?.forEach((l: go.ObjectData, idx: number) => {\r\n\t\t\tmapLinkKeyIdx.set(l.key, idx);\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Handle any relevant DiagramEvents, in case just selection changes.\r\n\t * On ChangedSelection, find the corresponding data and set the selectedData state.\r\n\t * @param e a GoJS DiagramEvent\r\n\t */\r\n\tconst handleDiagramEvent = (e: go.DiagramEvent) => {\r\n\t\tconst name = e.name;\r\n\r\n\t\tswitch (name) {\r\n\t\t\tcase \"ChangedSelection\": {\r\n\t\t\t\tconst sel = e.subject.first();\r\n\t\t\t\tsetState(\r\n\t\t\t\t\tproduce((draft: AppState) => {\r\n\t\t\t\t\t\tif (sel) {\r\n\t\t\t\t\t\t\tif (sel instanceof go.Node) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"cambie\");\r\n\t\t\t\t\t\t\t\tconst idx = mapNodeKeyIdx.get(sel.key);\r\n\t\t\t\t\t\t\t\tif (idx !== undefined && idx >= 0) {\r\n\t\t\t\t\t\t\t\t\tconst nd = draft.nodeDataArray[idx];\r\n\r\n\t\t\t\t\t\t\t\t\tdraft.selectedData = nd;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (sel instanceof go.Link) {\r\n\t\t\t\t\t\t\t\tconst idx = mapLinkKeyIdx.get(sel.key);\r\n\r\n\t\t\t\t\t\t\t\tif (idx !== undefined && idx >= 0) {\r\n\t\t\t\t\t\t\t\t\tconst ld = draft.linkDataArray[idx];\r\n\t\t\t\t\t\t\t\t\tdraft.selectedData = ld;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdraft.selectedData = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Handle GoJS model changes, which output an object of data changes via Model.toIncrementalData.\r\n\t * method iterates over those changes and updates state to keep in sync with the GoJS model.\r\n\t * @param obj a JSON-formatted string\r\n\t */\r\n\r\n\tconst handleModelChange = (obj: go.IncrementalData) => {\r\n\t\tconst insertedNodeKeys = obj.insertedNodeKeys;\r\n\t\tconst modifiedNodeData = obj.modifiedNodeData;\r\n\t\tconst removedNodeKeys = obj.removedNodeKeys;\r\n\t\tconst insertedLinkKeys = obj.insertedLinkKeys;\r\n\t\tconst modifiedLinkData = obj.modifiedLinkData;\r\n\t\tconst removedLinkKeys = obj.removedLinkKeys;\r\n\t\tconst modifiedModelData = obj.modelData;\r\n\r\n\t\t// maintain maps of modified data so insertions don't need slow lookups\r\n\t\tconst modifiedNodeMap = new Map<go.Key, go.ObjectData>();\r\n\t\tconst modifiedLinkMap = new Map<go.Key, go.ObjectData>();\r\n\t\tsetState(\r\n\t\t\tproduce((draft: AppState) => {\r\n\t\t\t\tlet narr = draft.nodeDataArray;\r\n\r\n\t\t\t\tif (modifiedNodeData) {\r\n\t\t\t\t\tmodifiedNodeData.forEach((nd: go.ObjectData) => {\r\n\t\t\t\t\t\tmodifiedNodeMap.set(nd.key, nd);\r\n\t\t\t\t\t\tconst idx = mapNodeKeyIdx.get(nd.key);\r\n\t\t\t\t\t\tif (idx !== undefined && idx >= 0) {\r\n\t\t\t\t\t\t\tnarr[idx] = nd;\r\n\t\t\t\t\t\t\tif (draft.selectedData && draft.selectedData.key === nd.key) {\r\n\t\t\t\t\t\t\t\tdraft.selectedData = nd;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (insertedNodeKeys) {\r\n\t\t\t\t\tinsertedNodeKeys.forEach((key: go.Key) => {\r\n\t\t\t\t\t\tconst nd = modifiedNodeMap.get(key);\r\n\t\t\t\t\t\tconst idx = mapNodeKeyIdx.get(key);\r\n\t\t\t\t\t\tif (nd && idx === undefined) {\r\n\t\t\t\t\t\t\t// nodes won't be added if they already exist\r\n\t\t\t\t\t\t\tmapNodeKeyIdx.set(nd.key, narr.length);\r\n\t\t\t\t\t\t\tnarr.push(nd);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (removedNodeKeys) {\r\n\t\t\t\t\tnarr = narr.filter((nd: go.ObjectData) => {\r\n\t\t\t\t\t\tif (removedNodeKeys.includes(nd.key)) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdraft.nodeDataArray = narr;\r\n\t\t\t\t\trefreshNodeIndex(narr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet larr = draft.linkDataArray;\r\n\t\t\t\tif (modifiedLinkData) {\r\n\t\t\t\t\tmodifiedLinkData.forEach((ld: go.ObjectData) => {\r\n\t\t\t\t\t\tmodifiedLinkMap.set(ld.key, ld);\r\n\t\t\t\t\t\tconst idx = mapLinkKeyIdx.get(ld.key);\r\n\t\t\t\t\t\tif (idx !== undefined && idx >= 0) {\r\n\t\t\t\t\t\t\tlarr[idx] = ld;\r\n\t\t\t\t\t\t\tif (draft.selectedData && draft.selectedData.key === ld.key) {\r\n\t\t\t\t\t\t\t\tdraft.selectedData = ld;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (insertedLinkKeys) {\r\n\t\t\t\t\t/*insertedLinkKeys.forEach((key: go.Key) => {\r\n            const ld = modifiedLinkMap.get(key);\r\n            const idx = mapLinkKeyIdx.get(key);\r\n            if (ld && idx === undefined) {  // links won't be added if they already exist\r\n              mapLinkKeyIdx.set(ld.key, larr.length);\r\n              larr.push(ld);\r\n            }\r\n          });*/\r\n\t\t\t\t}\r\n\t\t\t\tif (removedLinkKeys) {\r\n\t\t\t\t\tlarr = larr.filter((ld: go.ObjectData) => {\r\n\t\t\t\t\t\tif (removedLinkKeys.includes(ld.key)) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdraft.linkDataArray = larr;\r\n\t\t\t\t\trefreshLinkIndex(larr);\r\n\t\t\t\t}\r\n\t\t\t\t// handle model data changes, for now just replacing with the supplied object\r\n\t\t\t\tif (modifiedModelData) {\r\n\t\t\t\t\tdraft.modelData = modifiedModelData;\r\n\t\t\t\t}\r\n\t\t\t\tdraft.skipsDiagramUpdate = true; // the GoJS model already knows about these updates\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t * Handle inspector changes, and on input field blurs, update node/link data state.\r\n\t * @param path the path to the property being modified\r\n\t * @param value the new value of that property\r\n\t * @param isBlur whether the input event was a blur, indicating the edit is complete\r\n\t */\r\n\tconst handleInputChange = (path: string, value: string, isBlur: boolean) => {\r\n\t\tsetState(\r\n\t\t\tproduce((draft: AppState) => {\r\n\t\t\t\tconst data = draft.selectedData as go.ObjectData; // only reached if selectedData isn't null\r\n\t\t\t\tdata[path] = value;\r\n\t\t\t\tif (isBlur) {\r\n\t\t\t\t\tconst key = data.key;\r\n\t\t\t\t\tif (key < 0) {\r\n\t\t\t\t\t\t// negative keys are links\r\n\t\t\t\t\t\tconst idx = mapLinkKeyIdx.get(key);\r\n\t\t\t\t\t\tif (idx !== undefined && idx >= 0) {\r\n\t\t\t\t\t\t\tdraft.linkDataArray[idx] = data;\r\n\t\t\t\t\t\t\tdraft.skipsDiagramUpdate = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst idx = mapNodeKeyIdx.get(key);\r\n\t\t\t\t\t\tif (idx !== undefined && idx >= 0) {\r\n\t\t\t\t\t\t\tdraft.nodeDataArray[idx] = data;\r\n\t\t\t\t\t\t\tdraft.skipsDiagramUpdate = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t * Handle changes to the checkbox on whether to allow relinking.\r\n\t * @param e a change event from the checkbox\r\n\t */\r\n\tconst handleRelinkChange = (e: any) => {\r\n\t\tconst target = e.target;\r\n\t\tconst value = target.checked;\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tmodelData: { canRelink: value },\r\n\t\t\tskipsDiagramUpdate: false,\r\n\t\t});\r\n\t};\r\n\r\n\trefreshNodeIndex(state.nodeDataArray);\r\n\trefreshLinkIndex(state.linkDataArray);\r\n\tconst changeStateCallback = React.useCallback(async (childData: any, texto: string) => {\r\n\t\tsetState(IniState);\r\n\t\tsetTimeout(() => {\r\n\t\t\trefreshNodeIndex(childData.nodeDataArray);\r\n\t\t\trefreshLinkIndex(childData.linkDataArray);\r\n\t\t\tsetState(childData);\r\n\t\t\tsetTextoState(texto);\r\n\t\t}, 10);\r\n\t}, []);\r\n\tconst guardarTodo = () => {\r\n\t\tconst arr = [JSON.stringify(state), \"|||||\", textoState];\r\n\t\tconst bloc = new Blob(arr, { type: \"text/plain;charset=utf-8\" });\r\n\t\tsaveAs(bloc, \"myArchivo.txt\");\r\n\t};\r\n\tconst selectedData = state.selectedData;\r\n\tReact.useEffect(() => {\r\n\t\tconsole.log(state);\r\n\t}, [selectedData]);\r\n\t// let inspector;\r\n\t// if (selectedData !== null) {\r\n\t// \tinspector = <SelectionInspector selectedData={state.selectedData} onInputChange={handleInputChange} />;\r\n\t// }\r\n\t// Create a reference to the hidden file input element\r\n\tconst hiddenFileInput: any = React.useRef(null);\r\n\r\n\t// Programatically click the hidden file input element\r\n\t// when the Button component is clicked\r\n\tconst handleClick = (event: any) => {\r\n\t\thiddenFileInput.current.click();\r\n\t};\r\n\tconst readFile = (e: any) => {\r\n\t\ttry {\r\n\t\t\tconst file = e.target.files[0];\r\n\t\t\tconst filereader = new FileReader();\r\n\t\t\tfilereader.readAsText(file);\r\n\t\t\tfilereader.onload = () => {\r\n\t\t\t\tconst result = filereader.result as string;\r\n\t\t\t\tconst resultado = result.split(\"|||||\");\r\n\t\t\t\tconsole.log(\"resultado\", JSON.parse(resultado[0]));\r\n\t\t\t\tconsole.log(\"resultado texto\", resultado[1]);\r\n\t\t\t\tsetState(JSON.parse(resultado[0]));\r\n\t\t\t\tsetTextoState(resultado[1]);\r\n\t\t\t};\r\n\t\t\tfilereader.onerror = () => {\r\n\t\t\t\tconsole.log(filereader.error);\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(\"error\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"w-screen h-screen\">\r\n\t\t\t<nav className=\"bg-gray-800 z-50 w-full flex p-2 gap-6 md:gap-8\">\r\n\t\t\t\t<div className=\"text-gray-200 text-2xl\"> CDBMD </div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"text-white text-icon-code\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetAnimationState((state) => !state);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPen} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"bg-red-500 shadow-md hover:bg-red-700 \r\n\t\t\t\ttext-white text-icon-rest rounded-full\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} />\r\n\t\t\t\t\t<span className=\"hidden sm:block\">Nuevo</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<input type=\"file\" name=\"Importar\" onChange={readFile} ref={hiddenFileInput} multiple={false} className=\"hidden\" />\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\tclassName=\"bg-blue-500 shadow-md hover:bg-blue-700 \r\n\t\t\t\t\ttext-white text-icon-rest rounded-full\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faUpload} />\r\n\t\t\t\t\t<span className=\"hidden sm:block\">Importar</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={guardarTodo}\r\n\t\t\t\t\tclassName=\"bg-green-500 shadow-md hover:bg-green-700 \r\n\t\t\t\t\ttext-white text-icon-rest rounded-full\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faSave} />\r\n\t\t\t\t\t<span className=\"hidden sm:block\">Guardar</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsethelpTodo(!helpTodo);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"bg-green-500 shadow-md hover:bg-green-700 \r\n\t\t\t\t\ttext-white text-icon-rest rounded-full\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faQuestion} />\r\n\t\t\t\t\t<span className=\"hidden sm:block\">Ayuda</span>\r\n\t\t\t\t</button>\r\n\t\t\t</nav>\r\n\t\t\t<div className=\"relative\" style={{ height: \"calc(100vh - 3rem)\", width: \"100vw\" }}>\r\n\t\t\t\t<div className=\"absolute flex flex-nowrap z-10\" style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<CSSTransition\r\n\t\t\t\t\t\tin={animation}\r\n\t\t\t\t\t\ttimeout={800}\r\n\t\t\t\t\t\tclassName=\"animate__animated\"\r\n\t\t\t\t\t\tclassNames={{\r\n\t\t\t\t\t\t\tenter: \"animate__fadeInLeft animate__fast\",\r\n\t\t\t\t\t\t\texit: \"animate__fadeOutLeft animate__fast\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"w-5/6 md:w-full\">\r\n\t\t\t\t\t\t\t<ParserGenerator changeStateCallback={changeStateCallback} stateData={state} textoState={textoState} setTextoState={setTextoState} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"w-full h-full\">\r\n\t\t\t\t\t<DiagramWrapper\r\n\t\t\t\t\t\tnodeDataArray={state.nodeDataArray}\r\n\t\t\t\t\t\tlinkDataArray={state.linkDataArray}\r\n\t\t\t\t\t\tmodelData={state.modelData}\r\n\t\t\t\t\t\tskipsDiagramUpdate={state.skipsDiagramUpdate}\r\n\t\t\t\t\t\tonDiagramEvent={handleDiagramEvent}\r\n\t\t\t\t\t\tonModelChange={handleModelChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <label>\r\n          Allow Relinking?\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"relink\"\r\n            checked={state.modelData.canRelink}\r\n            onChange={handleRelinkChange}\r\n          />\r\n        </label> */}\r\n\t\t\t\t{/* {inspector} */}\r\n\t\t\t\t<div className=\"absolute right-0 top-0 z-20 overflow-hidden \">\r\n\t\t\t\t\t<CSSTransition\r\n\t\t\t\t\t\tin={helpTodo}\r\n\t\t\t\t\t\ttimeout={800}\r\n\t\t\t\t\t\tclassName=\"animate__animated relative  main-help overflow-y-auto flex flex-nowrap rounded-l-xl  bg-gray-800 h-full\"\r\n\t\t\t\t\t\tclassNames={{\r\n\t\t\t\t\t\t\tenter: \"animate__fadeInRight animate__fast\",\r\n\t\t\t\t\t\t\texit: \"animate__fadeOutRight animate__fast\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<MainHelp />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./App.css\";\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}